{"version":3,"sources":["images/bookCover.jpg","constants/routes.js","components/firebase/Session/context.js","components/firebase/Firebase/context.js","components/firebase/Firebase/firebase.js","components/firebase/Firebase/index.js","constants/extensions.js","components/firebase/Session/withAuthentication.js","components/firebase/Session/withAuthorization.js","components/firebase/Session/withAuthStatic.js","components/Navigation/index.js","components/Landing/index.js","components/firebase/SignUp/index.js","components/firebase/PasswordForget/index.js","components/firebase/SignIn/index.js","components/Home/index.js","components/firebase/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/Story/CreateStory.js","components/Story/StoryCard.js","components/Story/ListStories.js","constants/months.js","components/Character/CharacterForm.js","components/Character/ListCharacters.js","components/Character/ViewCharacter.js","components/Character/CreateCharacter.js","components/Character/CharacterCard.js","components/Story/ViewStory.js","components/Story/CreateChapter.js","components/Story/CreatePost.js","components/Story/ViewChapter.js","components/Story2/Book.js","components/Story2/GenreList.js","components/Story2/StoryForm.js","components/Story2/StoryList.js","components/Story2/ChapterForm.js","components/Story2/StoryView.js","components/Story2/ReplyForm.js","components/Story2/ChapterView.js","components/Story2/StoryContainer.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HOME","LIST_STORY","STORY_VIEW","CHAPTER_VIEW","APPLY_CHARACTER","ACCEPT_CHARACTER","DENY_CHARACTER","UPDATE_STORY","CREATE_CHAPTER","UPDATE_CHAPTER","CREATE_REPLY","UPDATE_REPLY","VIEW_CHARACTER","CREATE_CHARACTER","UPDATE_CHARACTER","BACKEND","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","makeCancelable","promise","hasCanceled_","Promise","resolve","reject","then","val","error","isCanceled","cancel","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","promises","state","userInfo","checkedAuth","inherits","createClass","key","value","_this2","onAuthStateChanged","authUser","getIdToken","idToken","splice","length","axios","post","concat","token","user","setState","data","localStorage","setItem","catch","console","log","forEach","context","Provider","Loader","active","withAuthorization","condition","badCheck","renderAnyways","arguments","undefined","WithAuthorization","_getPrototypeOf2","_len","args","Array","_key","apply","Axios","ROUTES","history","_this3","compose","withRouter","withAuthStatic","WithAuthStatic","Navigation","setTarget","to","includes","menuTarget","location","pathname","backListener","listen","loggedInItems","activeLink","route","title","icon","loggedOutItems","Menu","inverted","pointing","secondary","map","item","index","Item","color","onClick","push","Icon","name","size","event","window","open","focus","Segment","Header","as","Message","attached","style","List","INITIAL_STATE","username","passwordOne","passwordTwo","SignUpFormBase","onSubmit","_this$state","objectSpread","res","preventDefault","onChange","defineProperty","target","_this$state2","isInvalid","Form","Group","Input","type","placeholder","Button","disabled","primary","message","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetPage","PasswordForgetForm","query","SignInFormBase","search","split","element","variable","className","SignInForm","SignInPage","warning","react_router_dom","HomePage","href","PasswordChangeForm","AccountPage","PasswordChange","AdminPage","roles","description","closed_group","genres","genresSelection","CreateStory","selectedGenres","i","_id","getItem","story","replace","newStory","onGenreChange","genre","get","info","_info$info","listItems","Checkbox","label","Container","Table","Row","HeaderCell","textAlign","Body","Cell","fluid","TextArea","Label","genreList","toggle","CreateStoryLinkBase","Click","_this4","CreateStoryLink","StoryCard","date","Date","date_created","width","getMonth","getDate","getFullYear","replies","author","StoryTable","TableCards","stories","rows","StoryCard_StoryCard","striped","genreChecks","filteredStories","Months","text","character","basicinfo","age","gender","birthmonth","birthday","relationships","backstory","appearance","hair","eyes","image","personality","traits","likes","dislikes","habits","quirks","imageSrc","crop","aspect","x","y","pixelCrop","hasSubmittedAtLeastOnce","CharacterForm","onChangeBasic","onChangeAppearance","onChangePersonality","onChangeCrop","imageRef","onSelectFile","files","reader","FileReader","addEventListener","result","readAsDataURL","onImageLoaded","MonthsDropdown","myself","monthElements","month","actionName","Grid","columns","centered","stackable","Column","labelPosition","min","max","ReactCrop_default","src","onComplete","onCropComplete","characters","ListCharacters","height","canvas","document","getContext","drawImage","cloudinary","cloud_name","api_key","api_secret","uploader","upload","toDataURL","tags","url","Modal","trigger","dimmer","closeOnDimmerClick","closeIcon","Content","scrolling","Character_CharacterForm","CharacterGrid","hairColor","eyeColor","ready","ViewCharacter","modifiedCharacter","initialCharacter","sendModifiedCharacter","match","params","character_id","fixed","basic","backgroundColor","closest_named_hex","contrast","Image","floated","CreateCharacter","CharacterCard","goToPage","_this$props","actionButtons","Card","link","CharacterGridBase","characterList","CharacterCard_CharacterCard","chapters","selectedCharacter","ViewStory","getStory","story_id","listCharacterOptions","options","onChooseCharacterChange","onLinkClick","onApplyCharacter","_res$data","status","alert","isCreator","chapterList","chapter","ModalDescription","listGenres","listChapters","CreateChapter","newChapter","updatedStory","postData","CreatePost","CreatePostButtonBase","clickLink","showReplyForm","ViewChapter","createParagraphClick","_this$props$match$par","chapter_name","TableBody","posts","Story_CreatePost","listReplies","fontColor","Book","loader","dateCreated","backgroundImage","backgroundSize","display","alignItems","GenreList","selections","padding","checked","subscribers","applicantcharacters","StoryForm","onCheckboxChange","_ref","onStorySubmit","usedGenres","indexOf","collapsing","Story2_GenreList","actionText","loadedQty","hasMore","StoryList","fetchStoriesPromise","keepLoadingDataRoutine","onStoryCreateSubmit","timeout","clearTimeout","setTimeout","filterStories","newFilter","toConsumableArray","checkFilters","iter","check","fetchData","PullDataPart","start","quantity","storyData","Story2_StoryForm","lib_default","marginTop","dataLength","next","hasChildren","Story2_Book","ChapterForm","loadedStory","loadedCharacters","StoryView","goToLink","onCharacterApplyClick","addToApplicants","addToRosterFree","onAccept","stopPropagation","addToRoster","removeFromApplicants","onDeny","newApplicants","newRoster","applicantIndex","submitChapter","place","updateChapter","onChapterClick","id","onUpdateStory","updateStory","Story2_ChapterForm","Character_CharacterCard","Description","reply","ReplyForm","chars","ids","filteredChars","filter","float","marginRight","margin","ChapterView","onSubmitPost","onUpdatePost","Story2_ReplyForm","Placeholder","Line","Paragraph","StoryContainer","react_router","path","component","Story2_StoryList","Story2_StoryView","Story2_ChapterView","App","components_Navigation","exact","Landing","SignUp","SignIn","PasswordForget","Home","Account","Admin","Boolean","hostname","ReactDOM","render","Firebase_context","components_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.75c4c86f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bookCover.9c00db32.jpg\";","export const LANDING = \"/\";\nexport const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const HOME = \"/home\";\nexport const ACCOUNT = \"/account\";\nexport const ADMIN = \"/admin\";\nexport const PASSWORD_FORGET = \"/pw-forget\";\n\nexport const STORY_CONTAINER = \"/story\";\nexport const LIST_STORY = \"/story/list\";\nexport const LIST_STORY_PART = \"/story/list/:start/:quantity\";\nexport const LIST_GENRE = \"/story/genre/list\"\nexport const STORY_VIEW = \"/story/view/:story_id\";\nexport const CHAPTER_VIEW = \"/story/chapter/view/:story_id/:chapter_name\";\nexport const CREATE_POST = \"/story/post/:story_id\";\nexport const APPLY_CHARACTER = \"/story/apply\";\nexport const ACCEPT_CHARACTER = \"/story/accept\";\nexport const DENY_CHARACTER = \"/story/deny\";\n\nexport const CREATE_STORY = \"/story/create\";\nexport const UPDATE_STORY = \"/story/update\";\nexport const CREATE_CHAPTER = \"/story/chapter/create\";\nexport const UPDATE_CHAPTER = \"/story/update/chapter\";\nexport const CREATE_REPLY = \"/story/chapter/post\";\nexport const UPDATE_REPLY = \"/story/update/chapter/post\";\n\nexport const LIST_CHARACTERS = \"/character/list\";\nexport const VIEW_CHARACTER = \"/character/view/:character_id\";\nexport const CREATE_CHARACTER = \"/character/create\";\nexport const UPDATE_CHARACTER = \"/character/update\"\n\nexport const BACKEND = \"http://simply-roleplay.herokuapp.com/api\";","import React from \"react\";\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from \"react\";\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props =>\n    (\n        <FirebaseContext.Consumer>\n            {firebase => <Component {...props} firebase={firebase} />}\n        </FirebaseContext.Consumer>\n    );\n\nexport default FirebaseContext;","import app from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst liveconfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nconst devconfig = {\n    apiKey: process.env.REACT_APP_API_KEY_DEV,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN_DEV,\n    databaseURL: process.env.REACT_APP_DATABASE_URL_DEV,\n    projectId: process.env.REACT_APP_PROJECT_ID_DEV,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET_DEV,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID_DEV\n};\n\nconst config = process.env.NODE_ENV === \"production\" ? liveconfig : devconfig;\n\nclass Firebase\n{\n    constructor()\n    {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = (password) => this.auth.currentUser.updatePassword(password);\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from \"./context\";\nimport Firebase from \"./firebase\";\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","const makeCancelable = (promise) =>\n{\n    let hasCanceled_ = false;\n\n    const wrappedPromise = new Promise((resolve, reject) =>\n    {\n        promise.then(\n            // val => hasCanceled_ ? reject({ isCanceled: true }) : resolve(val),\n            val => hasCanceled_ ? null : resolve(val),\n            error => hasCanceled_ ? reject({ isCanceled: true }) : reject(error)\n        );\n    });\n\n    return {\n        promise: wrappedPromise,\n        cancel()\n        {\n            hasCanceled_ = true;\n        },\n    };\n};\n\nexport { makeCancelable };","import React from \"react\";\nimport axios from \"axios\";\nimport { Loader } from \"semantic-ui-react\";\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\nimport { BACKEND } from \"../../../constants/routes\";\nimport { makeCancelable } from \"../../../constants/extensions\";\n\nconst withAuthentication = Component =>\n{\n    class WithAuthentication extends React.Component\n    {\n        promises = [];\n\n        constructor(props)\n        {\n            super(props);\n            this.state = {\n                userInfo: null,\n                checkedAuth: false\n            };\n        }\n\n        componentDidMount()\n        {\n            this.props.firebase.auth.onAuthStateChanged(\n                authUser =>\n                {\n                    if (authUser)\n                    {\n                        this.props.firebase.auth.currentUser.getIdToken(true)\n                            .then(idToken =>\n                            {\n                                this.promises.splice(this.promises.length - 1, 0, makeCancelable(axios.post(`${BACKEND}/user`, { token: idToken })\n                                    .then(user =>\n                                    {\n                                        this.setState({\n                                            userInfo: {\n                                                authUser: authUser,\n                                                user: user.data.data\n                                            },\n                                            checkedAuth: true\n                                        });\n                                        localStorage.setItem(\"token\", idToken);\n                                    })\n                                    .catch(error =>\n                                    {\n                                        console.log(error);\n                                    })));\n                            })\n                            .catch(error =>\n                            {\n                                console.log(error);\n                            });\n                    }\n                    else\n                    {\n                        this.setState({ userInfo: null, checkedAuth: true });\n                        localStorage.setItem(\"token\", null);\n                    };\n                }\n            );\n        }\n\n        componentWillUnmount()\n        {\n            this.promises.forEach(promise => promise.cancel());\n        }\n\n        render()\n        {\n            return (\n                <AuthUserContext.Provider value={this.state.userInfo}>\n                    {(this.state.checkedAuth) ? <Component {...this.props} /> : <Loader active />}\n                </AuthUserContext.Provider>\n            );\n        }\n    }\n\n    return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../../constants/routes\";\nimport Axios from \"axios\";\nimport { makeCancelable } from \"../../../constants/extensions\";\n\nconst withAuthorization = (condition, badCheck, renderAnyways = false) => Component =>\n{\n    class WithAuthorization extends React.Component\n    {\n        promises = [];\n\n        componentDidMount()\n        {\n            this.props.firebase.auth.onAuthStateChanged(\n                authUser =>\n                {\n                    if (authUser)\n                    {\n                        this.props.firebase.auth.currentUser.getIdToken(true)\n                            .then(token =>\n                            {\n                                this.promises.splice(this.promises.length - 1, 0, makeCancelable(Axios.post(`${ROUTES.BACKEND}/user`, { token: token })\n                                    .then(user =>\n                                    {\n                                        const userInfo = {\n                                            authUser: authUser,\n                                            user: user.data.data\n                                        }\n\n                                        if (!condition(userInfo)) badCheck(this.props.history);\n                                    })\n                                    .catch(error =>\n                                    {\n                                        console.log(error);\n                                    })));\n                            })\n                            .catch(error =>\n                            {\n                                console.log(error);\n                            });\n                    }\n                    else\n                        if (!renderAnyways) badCheck(this.props.history);\n                }\n            );\n        }\n\n        componentWillUnmount()\n        {\n            this.promises.forEach(promise => promise.cancel());\n        }\n\n        render()\n        {\n            return (\n                <AuthUserContext.Consumer>\n                    {userInfo => condition(userInfo) ? <Component {...this.props} userInfo={userInfo} /> : null}\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n\n    return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withAuthStatic = Component =>\n{\n    class WithAuthStatic extends React.Component\n    {\n        render()\n        {\n            return (\n                <AuthUserContext.Consumer>\n                    {userInfo => <Component {...this.props} userInfo={userInfo} />}\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n\n    return compose(withRouter, withFirebase)(WithAuthStatic);\n};\n\nexport default withAuthStatic;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../firebase/Firebase\";\nimport { withAuthStatic } from \"../firebase/Session\";\nimport * as ROUTES from \"../../constants/routes\";\n\nclass Navigation extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            menuTarget: \"home\"\n        };\n    }\n\n    componentDidMount()\n    {\n        this.setTarget(this.props.location.pathname);\n\n        this.backListener = this.props.history.listen(location =>\n        {\n            this.setTarget(location.pathname);\n        });\n    }\n\n    componentWillUnmount()\n    {\n        this.backListener();\n    }\n\n    setTarget = (to) =>\n    {\n        if (to.includes(\"home\")) this.setState({ menuTarget: \"home\" });\n        if (to.includes(\"account\")) this.setState({ menuTarget: \"account\" });\n        if (to.includes(\"story\")) this.setState({ menuTarget: \"story\" });\n        if (to.includes(\"character\")) this.setState({ menuTarget: \"character\" });\n        if (to === \"/\") this.setState({ menuTarget: \"landing\" });\n        if (to.includes(\"signin\")) this.setState({ menuTarget: \"signin\" });\n    }\n\n    render()\n    {\n        const { props, state } = this;\n        const { userInfo, history, firebase } = props;\n        const { menuTarget } = state;\n\n        const loggedInItems = [\n            { activeLink: \"home\", route: ROUTES.HOME, title: \"Home\", icon: \"home\" },\n            { activeLink: \"account\", route: ROUTES.ACCOUNT, title: \"Account\", icon: \"user\" },\n            { activeLink: \"story\", route: ROUTES.LIST_STORY, title: \"Stories\", icon: \"book\" },\n            { activeLink: \"character\", route: ROUTES.LIST_CHARACTERS, title: \"Characters\", icon: \"user secret\" }\n        ];\n\n        const loggedOutItems = [\n            { activeLink: \"landing\", route: ROUTES.LANDING, title: \"Home\", icon: \"home\" },\n            { activeLink: \"story\", route: ROUTES.LIST_STORY, title: \"Stories\", icon: \"book\" },\n            { activeLink: \"signin\", route: ROUTES.SIGN_IN, title: \"Sign In\", icon: \"sign in alternate\" }\n        ];\n\n        return (\n            <Menu inverted pointing secondary>\n                {\n                    !!userInfo ?\n                        [\n                            loggedInItems.map((item, index) =>\n                                (\n                                    <Menu.Item\n                                        color=\"blue\"\n                                        key={index}\n                                        active={menuTarget === item.activeLink}\n                                        onClick={() => { history.push(item.route) }}>\n                                        <Icon name={item.icon} size=\"large\" color={menuTarget === item.activeLink ? \"blue\" : null} />\n                                        <div>{item.title}</div>\n                                    </Menu.Item>\n                                )),\n                            <Menu.Item key={loggedInItems.length} onClick={event => { firebase.doSignOut(); history.push(\"/\"); }} >\n                                <Icon name=\"sign out alternate\" size=\"large\" />\n                                Log Out\n                            </Menu.Item>,\n                            <Menu.Item key={loggedInItems.length + 1} onClick={event => { window.open(\"https://github.com/FedoraGameDev/roleplay/issues/new\", \"_blank\").focus(); }}>\n                                <Icon name=\"bug\" size=\"large\" />\n                                Report a Bug\n                            </Menu.Item>\n                        ]\n                        :\n                        loggedOutItems.map((item, index) =>\n                            (\n                                <Menu.Item\n                                    color=\"blue\"\n                                    key={index}\n                                    active={menuTarget === item.activeLink}\n                                    onClick={() => { history.push(item.route) }}>\n                                    <Icon name={item.icon} size=\"large\" color={menuTarget === item.activeLink ? \"blue\" : null} />\n                                    <div>{item.title}</div>\n                                </Menu.Item>\n                            ))\n                }\n            </Menu>\n        );\n    }\n}\n\nexport default compose(withAuthStatic, withRouter, withFirebase)(Navigation);","import React from \"react\";\nimport { Segment, Header, Message } from \"semantic-ui-react\";\nimport { withAuthStatic } from \"../firebase/Session\";\n\nclass Landing extends React.Component\n{\n    render()\n    {\n        return (\n            <Segment>\n                <Header as=\"h1\"><center>Welcome to the roleplay website!</center></Header>\n                <Message attached=\"top\"><Message.Header><center style={{ color: \"red\" }}>Note: this site is in beta.</center></Message.Header></Message>\n                {\n                    this.props.userInfo ?\n                        <Message attached>\n                            <Message.Header>\n                                I see you've logged in. Head over to the characters page to create a character. Or, if you would like to see the stories, go to that page.\n                            </Message.Header>\n                        </Message>\n                        :\n                        <Message attached>\n                            <Message.Header>\n                                Head over to the log in page and click 'Sign Up' to create a new account.\n                            </Message.Header>\n                        </Message>\n                }\n                <Message attached>\n                    <Message.Header>A few things to keep in mind</Message.Header>\n                    <Message.List>\n                        <Message.Item>This site is subject to change.</Message.Item>\n                        <Message.Item>The backend is not in its final state, so some stories may not survive. Only start stories for testing purposes for now.</Message.Item>\n                        <Message.Item>Log in to get the link for reporting bugs.</Message.Item>\n                        <Message.Item>You may add suggestions to the bug reporting page, as well.</Message.Item>\n                    </Message.List>\n                </Message>\n                <Message attached>\n                    <Message.Header>\n                        The purpose of this site is to bring the community to a well-formatted site for roleplaying.\n                    It was built on React to have a modern, snappy front-end experience. I am a solo developer, however, so updates may take time.\n                    I will keep all user suggestions in mind while building more features into the site.\n                    </Message.Header>\n                </Message>\n                <Message attached=\"bottom\">\n                    <Message.Header>Planned Features</Message.Header>\n                    <Message.List>\n                        <Message.Item>Mobile-friendly interface</Message.Item>\n                        <Message.Item>Chapter locks</Message.Item>\n                        <Message.Item>Story search bar</Message.Item>\n                        <Message.Item>BB code support</Message.Item>\n                        <Message.Item>Notifications</Message.Item>\n                        <Message.Item>Some other stuff I can't think of right now.</Message.Item>\n                    </Message.List>\n                </Message>\n            </Segment>\n        )\n    }\n}\n\nexport default withAuthStatic(Landing);","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../../constants/routes\";\nimport { Form, Message, Button, Segment } from \"semantic-ui-react\";\n\nconst SignUpPage = () =>\n    (\n        <Segment>\n            <Message attached=\"top\"><Message.Header>Sign Up</Message.Header></Message>\n            <SignUpForm />\n        </Segment>\n    );\n\nconst INITIAL_STATE = {\n    username: \"\",\n    email: \"\",\n    passwordOne: \"\",\n    passwordTwo: \"\",\n    error: null\n};\n\nclass SignUpFormBase extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event =>\n    {\n        const { username, email, passwordOne } = this.state;\n\n        this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser =>\n            {\n                this.setState({ ...INITIAL_STATE });\n\n                this.props.firebase.auth.currentUser.getIdToken(true)\n                    .then(idToken =>\n                    {\n                        axios.post(`${ROUTES.BACKEND}/user/create`, { token: idToken, username: username })\n                            .then(res =>\n                            {\n                                localStorage.setItem(\"token\", idToken);\n                                this.props.history.push(ROUTES.HOME);\n                            })\n                            .catch(error =>\n                            {\n                                console.log(error);\n                            });\n                    })\n                    .catch(error =>\n                    {\n                        console.log(error);\n                    });\n\n            })\n            .catch(error =>\n            {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event =>\n    {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render()\n    {\n        const {\n            username,\n            email,\n            passwordOne,\n            passwordTwo,\n            error\n        } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === \"\" ||\n            email === \"\" ||\n            username === \"\";\n\n        return (\n            <Segment attached=\"bottom\">\n                <Form onSubmit={this.onSubmit}>\n                    <Form.Group>\n                        <Form.Input name=\"username\" value={username} onChange={this.onChange} type=\"text\" placeholder=\"Username\" />\n                        <Form.Input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Email\" />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Input name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"Password\" />\n                        <Form.Input name=\"passwordTwo\" value={passwordTwo} onChange={this.onChange} type=\"password\" placeholder=\"Confirm Password\" />\n                    </Form.Group>\n                    <Button disabled={isInvalid} type=\"submit\" primary>Sign Up</Button>\n\n                    {error && <p>{error.message}</p>}\n                </Form>\n            </Segment>\n        );\n    }\n}\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\nconst SignUpLink = () =>\n    (\n        <p>Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link></p>\n    )\n\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../../constants/routes\";\nimport { Form, Input, Button, Segment } from \"semantic-ui-react\";\n\nconst PasswordForgetPage = () =>\n    (\n        <div>\n            <h1>Password Forget</h1>\n            <PasswordForgetForm />\n        </div>\n    );\n\nconst INITIAL_STATE = {\n    email: \"\",\n    error: null\n};\n\nclass PasswordForgetFormBase extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event =>\n    {\n        const { email } = this.state;\n\n        this.props.firebase.doPasswordReset(email)\n            .then(() =>\n            {\n                this.setState({ ...INITIAL_STATE });\n            })\n            .catch(error =>\n            {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event =>\n    {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render()\n    {\n        const { email, error } = this.state;\n\n        const isInvalid = (email === \"\");\n\n        return (\n            <Segment>\n                <Form onSubmit={this.onSubmit}>\n                    <Form.Group>\n                        <Form.Input name=\"email\" value={this.state.email} onChange={this.onChange} type=\"text\" placeholder=\"Email\" />\n                    </Form.Group>\n                    <Button primary disabled={isInvalid} type=\"submit\">Reset Password</Button>\n\n                    {error && <p></p>}\n                </Form>\n            </Segment>\n        );\n    }\n}\n\nconst PasswordForgetLink = () =>\n    (\n        <p><Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link></p>\n    );\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { SignUpLink } from \"../SignUp\";\nimport { PasswordForgetLink } from \"../PasswordForget\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../../constants/routes\";\nimport { Form, Icon, Button, Segment, Message } from \"semantic-ui-react\";\n\nconst SignInPage = () => (\n    <Segment>\n        <Message attached=\"top\"><Message.Header>Sign In</Message.Header></Message>\n        <SignInForm />\n        <Message attached=\"bottom\" warning>\n            <Icon name=\"help\" />\n            Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n        </Message>\n    </Segment>\n);\n\nconst INITIAL_STATE = {\n    email: \"\",\n    password: \"\",\n    error: null,\n    query: {}\n};\n\nclass SignInFormBase extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event =>\n    {\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() =>\n            {\n                this.props.firebase.auth.currentUser.getIdToken(true)\n                    .then(idToken =>\n                    {\n                        localStorage.setItem(\"token\", idToken);\n                        const query = {};\n                        if (this.props.location.search)\n                        {\n                            const search = this.props.location.search.split(\"?\")[1].split(\"&\");\n                            search.forEach(element =>\n                            {\n                                const variable = element.split(\"=\");\n                                query[variable[0]] = variable[1];\n                            });\n                        }\n                        if (!!query && !!query[\"forward\"])\n                            this.props.history.push(query[\"forward\"]);\n                        else\n                            this.props.history.push(ROUTES.HOME);\n                    })\n                    .catch(error =>\n                    {\n                        console.log(error);\n                    });\n            })\n            .catch(error =>\n            {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event =>\n    {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render()\n    {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === \"\" || email === \"\";\n\n        return (\n            <Form onSubmit={this.onSubmit} className=\"attached fluid segment\">\n                <Form.Group>\n                    <Form.Input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Email\" />\n                    <Form.Input name=\"password\" value={password} onChange={this.onChange} type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                <Button primary disabled={isInvalid} type=\"submit\">Sign In</Button>\n                <Button secondary onClick={() => this.props.history.push(ROUTES.PASSWORD_FORGET)}>Forgot Password?</Button>\n            </Form>\n        );\n    }\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React from \"react\";\nimport { withAuthorization } from \"../firebase/Session\";\nimport { SIGN_IN } from \"../../constants/routes\";\nimport { Segment, Message, Header } from \"semantic-ui-react\";\n\nclass HomePage extends React.Component\n{\n    render()\n    {\n        return (\n            <Segment>\n                <Header as=\"h1\"><center>Welcome, {this.props.userInfo.user.username}!</center></Header>\n                <Message attached=\"top\"><Message.Header><center style={{ color: \"red\" }}>Note: this site is in beta.</center></Message.Header></Message>\n                <Message attached>\n                    <Message.Header>A few things to keep in mind</Message.Header>\n                    <Message.List>\n                        <Message.Item>This site is subject to change.</Message.Item>\n                        <Message.Item>The backend is not in its final state, so some stories may not survive. Only start stories for testing purposes for now.</Message.Item>\n                        <Message.Item>If you encounter any bugs, please report them <a href=\"https://github.com/FedoraGameDev/roleplay/issues/new\" target=\"_blank\">Here</a> (requires free Github account)</Message.Item>\n                        <Message.Item>You may add suggestions to the bug reporting page, as well.</Message.Item>\n                    </Message.List>\n                </Message>\n                <Message attached>\n                    <Message.Header>\n                        Feel free to poke around the site and try some things out. If you think of any additions that you would like to see,\n                        Add them to the bug tracker as a feature.\n                    </Message.Header>\n                </Message>\n                <Message attached=\"bottom\">\n                    <Message.Header>Planned Features</Message.Header>\n                    <Message.List>\n                        <Message.Item>Mobile-friendly interface</Message.Item>\n                        <Message.Item>Chapter locks</Message.Item>\n                        <Message.Item>Story search bar</Message.Item>\n                        <Message.Item>BB code support</Message.Item>\n                        <Message.Item>Notifications</Message.Item>\n                        <Message.Item>Some other stuff I can't think of right now.</Message.Item>\n                    </Message.List>\n                </Message>\n            </Segment>\n        );\n    }\n}\n\nconst condition = authUser => !!authUser;\nconst badCheck = history => history.push(SIGN_IN);\n\nexport default withAuthorization(condition, badCheck)(HomePage);","import React, { Component } from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { Form, Input, Button, Segment } from \"semantic-ui-react\";\n\nconst INITIAL_STATE = {\n    passwordOne: \"\",\n    passwordTwo: \"\",\n    error: null\n};\n\nclass PasswordChangeForm extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event =>\n    {\n        const { passwordOne } = this.state;\n\n        this.props.firebase.doPasswordUpdate(passwordOne)\n            .then(() =>\n            {\n                this.setState({ ...INITIAL_STATE });\n            })\n            .catch(error =>\n            {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    }\n\n    onChange = event =>\n    {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    render()\n    {\n        const { passwordOne, passwordTwo, error } = this.state;\n\n        const isInvalid = (passwordOne !== passwordTwo || passwordOne === \"\");\n\n        return (\n            <Segment>\n                <Form onSubmit={this.onSubmit}>\n                    <Form.Group>\n                        <Form.Input name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"New Password\" />\n                        <Form.Input name=\"passwordTwo\" value={passwordTwo} onChange={this.onChange} type=\"password\" placeholder=\"Verify Password\" />\n                    </Form.Group>\n                    <Button primary disabled={isInvalid} type=\"submit\">Update My Password</Button>\n\n                    {error && <p>{error.message}</p>}\n                </Form>\n            </Segment>\n        );\n    }\n}\n\nexport default withFirebase(PasswordChangeForm);","import React from \"react\";\nimport { withAuthorization } from \"../firebase/Session\";\nimport { PasswordForgetForm } from \"../firebase/PasswordForget\";\nimport PasswordChangeForm from \"../firebase/PasswordChange\";\nimport * as ROUTES from \"../../constants/routes\";\nimport { Segment, Header } from \"semantic-ui-react\";\n\nclass AccountPage extends React.Component\n{\n    render()\n    {\n        console.log(this.props.userInfo);\n        return (\n            <Segment>\n                <Header as=\"h1\">{this.props.userInfo.user.username}</Header>\n                <Header as=\"h3\">{this.props.userInfo.authUser.email}</Header>\n                <PasswordForgetForm />\n                <PasswordChangeForm />\n            </Segment>\n        );\n    }\n}\n\nconst condition = (userInfo) => !!(userInfo && userInfo.authUser);\nconst badCheck = (history) => history.push(`${ROUTES.SIGN_IN}?forward=account`);\n\nexport default withAuthorization(condition, badCheck)(AccountPage);","import React from \"react\";\nimport { withAuthorization } from \"../firebase/Session\";\nimport * as ROUTES from \"../../constants/routes\";\n\nclass AdminPage extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        console.log(this.props);\n    }\n\n    render()\n    {\n        return (\n            <div>\n                <h1>Admin</h1>\n            </div>\n        )\n    }\n}\n\nconst condition = userInfo => (!!userInfo && !!userInfo.user.roles && userInfo.user.roles.includes(\"Admin\"));\nconst badCheck = (history) => history.push(`${ROUTES.SIGN_IN}?forward=admin`);\n\nexport default withAuthorization(condition, badCheck)(AdminPage);","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Button, TextArea, Input, Container, Checkbox, Label, Form, Table, Header } from \"semantic-ui-react\";\nimport { compose } from \"recompose\";\nimport { BACKEND, CREATE_STORY, STORY_VIEW, SIGN_IN, LIST_GENRE } from \"../../constants/routes\";\nimport { withAuthorization } from \"../firebase/Session\";\n\nconst INITIAL_STATE = {\n    title: \"\",\n    description: \"\",\n    closed_group: false,\n    genres: [],\n    genresSelection: {},\n    error: null\n}\n\nclass CreateStory extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        axios.get(`${BACKEND}${LIST_GENRE}`)\n            .then(res =>\n            {\n                this.setState({\n                    genres: res.data.genres\n                });\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    onChange = event =>\n    {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onSubmit = event =>\n    {\n        event.preventDefault();\n        const { title, description, closed_group, genresSelection, genres } = this.state;\n        const selectedGenres = [];\n\n        for (let i = 0; i < genres.length; i++)\n        {\n            const element = genresSelection[genres[i].name];\n\n            if (element === true)\n            {\n                selectedGenres.splice(genres.length - 1, 0, genres[i]._id);\n            }\n        }\n\n        axios.post(`${BACKEND}/story/create`, {\n            token: localStorage.getItem(\"token\"),\n            story:\n            {\n                title: title,\n                description: description,\n                closed_group: closed_group,\n                genres: selectedGenres\n            }\n        }).then(res =>\n        {\n            this.props.history.push(STORY_VIEW.replace(\":story_id\", res.data.newStory._id));\n        }).catch(error =>\n        {\n            this.setState({ error: error });\n        });\n    }\n\n    genreList(info)\n    {\n        const { genres, onGenreChange } = info.info;\n        const listItems = genres.map((genre, index) =>\n            <div className=\"genre-item\" key={index}>\n                <Checkbox\n                    name={genre.name}\n                    label={genre.name}\n                    onChange={event => { onGenreChange(genre.name) }} />\n            </div>\n        );\n\n        return <ul>{listItems}</ul>;\n    }\n\n    onGenreChange = genre =>\n    {\n        const genresSelection = { ...this.state.genresSelection };\n        genresSelection[genre] = !genresSelection[genre];\n        this.setState({ genresSelection: genresSelection });\n    }\n\n    render()\n    {\n        const { title, description, error, genres } = this.state;\n\n        const isInvalid = (title === \"\" || description === \"\");\n\n        return (\n            <Container>\n                <Table inverted attached=\"top\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell textAlign=\"center\"><Header as=\"h2\" inverted>New Story</Header></Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                </Table>\n                <Form onSubmit={this.onSubmit}>\n                    <Table attached=\"bottom\">\n                        <Table.Body>\n                            <Table.Row>\n                                <Table.Cell>\n                                    <Input fluid type=\"text\" onChange={this.onChange} name=\"title\" value={title} placeholder=\"title\" />\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell>\n                                    <TextArea onChange={this.onChange} name=\"description\" value={description} placeholder=\"description\" />\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\">\n                                    <Label>Genres</Label>\n                                    <this.genreList info={{ genres: genres, onGenreChange: this.onGenreChange }} />\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"right\">\n                                    <Checkbox onChange={this.onChange} name=\"closed_group\" toggle label=\"Require Character Approval\" />\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"right\">\n                                    <Button disabled={isInvalid} primary type=\"submit\">Create</Button>\n                                </Table.Cell>\n                            </Table.Row>\n                        </Table.Body>\n                    </Table>\n\n                    {error && <p>{error.message}</p>}\n                </Form>\n            </Container>\n        );\n    }\n}\n\nclass CreateStoryLinkBase extends Component\n{\n    Click = to =>\n    {\n        this.props.history.push(to);\n    }\n\n    render()\n    {\n        return (\n            <Button primary onClick={event => this.Click(CREATE_STORY)}>New Story</Button>\n        );\n    }\n}\n\nconst CreateStoryLink = withRouter(CreateStoryLinkBase);\n\nexport default compose(withRouter, withAuthorization(userInfo => !!userInfo, history => history.push(`${SIGN_IN}?forward=story/create`)))(CreateStory);\nexport { CreateStoryLink };","import React, { Component } from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { STORY_VIEW } from \"../../constants/routes\";\n\nclass StoryCard extends Component\n{\n    render()\n    {\n        const { story } = this.props;\n        const date = new Date(story.date_created);\n\n        return (\n            <Table.Row>\n                <Table.Cell width={10}>\n                    <Link to={STORY_VIEW.replace(\":story_id\", story._id)}>\n                        {story.title}\n                    </Link>\n                </Table.Cell>\n                <Table.Cell width={1}><center>\n                    {`${date.getMonth()}/${date.getDate()}/${date.getFullYear()}`}\n                </center></Table.Cell>\n                <Table.Cell width={1}><center>\n                    {story.replies}\n                </center></Table.Cell>\n                <Table.Cell width={2}><center>\n                    {story.author.username}\n                </center></Table.Cell>\n            </Table.Row>\n        );\n    }\n}\n\nclass StoryTable extends Component\n{\n    TableCards = (stories) =>\n    {\n        const rows = stories.stories.map((story, index) =>\n            (\n                <StoryCard key={index} story={story} />\n            ));\n\n        return (\n            <div>\n                <Table inverted attached=\"top\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell width={10}>Title</Table.HeaderCell>\n                            <Table.HeaderCell width={1}><center>Date Created</center></Table.HeaderCell>\n                            <Table.HeaderCell width={1}><center>Post Count</center></Table.HeaderCell>\n                            <Table.HeaderCell width={2}><center>Author</center></Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                </Table>\n                <Table attached=\"bottom\" striped>\n                    <Table.Body>\n                        {rows}\n                    </Table.Body>\n                </Table>\n            </div>\n        );\n    }\n\n    render()\n    {\n        return (\n            <this.TableCards stories={this.props.stories} />\n        );\n    }\n}\n\nexport default StoryCard;\nexport { StoryTable };","import React, { Component } from \"react\";\nimport { Container, Checkbox, Loader } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { CreateStoryLink } from \"./CreateStory\";\nimport { StoryTable } from \"./StoryCard\";\nimport { BACKEND, LIST_GENRE, LIST_STORY } from \"../../constants/routes\";\n\nconst INITIAL_STATE = {\n    genres: [],\n    genreChecks: [],\n    stories: [],\n    filteredStories: []\n}\n\nclass Story extends Component\n{\n    timeout = null;\n\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        axios.get(`${BACKEND}${LIST_GENRE}`)\n            .then(res =>\n            {\n                const genreChecks = {};\n                res.data.genres.forEach(element =>\n                {\n                    genreChecks[element.name] = false;\n                });\n                this.setState({\n                    genres: res.data.genres\n                });\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n\n        axios.get(`${BACKEND}${LIST_STORY}`)\n            .then(res =>\n            {\n                this.setState({ stories: res.data.stories, filteredStories: [...res.data.stories] });\n                this.filterStories();\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            })\n    }\n\n    filterStories = () =>\n    {\n        //TODO: this is slow (1N * genres)\n        const { stories, genres, genreChecks } = this.state;\n        const newFilter = [...stories];\n\n        if (this.checkFilters())\n        {\n            for (let i = 0; i < genres.length; i++)\n            {\n                const element = genreChecks[genres[i].name];\n\n                if (element === true)\n                {\n                    var iter = 0;\n                    while (iter < newFilter.length)\n                    {\n                        if (newFilter[iter].genres.indexOf(genres[i]._id) !== -1)\n                            iter++;\n                        else\n                            newFilter.splice(iter, 1);\n                    }\n                }\n            }\n        }\n\n        this.setState({ filteredStories: newFilter });\n    }\n\n    onGenreChange = genre =>\n    {\n        if (!!this.timeout)\n            clearTimeout(this.timeout);\n        const genreChecks = { ...this.state.genreChecks };\n        genreChecks[genre] = !genreChecks[genre];\n        this.setState({ genreChecks: genreChecks });\n        this.timeout = setTimeout(this.filterStories, 500);\n    }\n\n    checkFilters = () =>\n    {\n        for (let i = 0; i < this.state.genres.length; i++)\n        {\n            const check = this.state.genreChecks[this.state.genres[i].name];\n            if (check === undefined) continue;\n            if (check === true)\n                return true;\n        }\n\n        return false;\n    }\n\n    genreList(info)\n    {\n        const { genres, genreChecks, onGenreChange } = info.info;\n        const listItems = genres.map((genre, index) =>\n            <div className=\"genre-item\" key={index}>\n                <Checkbox\n                    name={genre.name}\n                    label={genre.name}\n                    defaultChecked={genreChecks[genre.name]}\n                    onChange={event => { onGenreChange(genre.name) }} />\n            </div>\n        );\n\n        return <ul>{listItems}</ul>;\n    }\n\n    render()\n    {\n        const { genres, stories, genreChecks, filteredStories } = this.state;\n        return (\n            <Container>\n                {(!!genres && !!stories) ? [\n                    <CreateStoryLink key={0} />,\n                    <Container key={1}><this.genreList info={{ genres, genreChecks, onGenreChange: this.onGenreChange }} /></Container>,\n                    <Container key={2}><StoryTable stories={filteredStories} /></Container>\n                ] :\n                    <Loader active />\n                }\n            </Container>\n        );\n    }\n}\n\nexport default Story;","const Months = [\n    { key: 0, value: 0, text: \"January\" },\n    { key: 1, value: 1, text: \"February\" },\n    { key: 2, value: 2, text: \"March\" },\n    { key: 3, value: 3, text: \"April\" },\n    { key: 4, value: 4, text: \"May\" },\n    { key: 5, value: 5, text: \"June\" },\n    { key: 6, value: 6, text: \"July\" },\n    { key: 7, value: 7, text: \"August\" },\n    { key: 8, value: 8, text: \"September\" },\n    { key: 9, value: 9, text: \"October\" },\n    { key: 10, value: 10, text: \"November\" },\n    { key: 11, value: 11, text: \"December\" }\n];\n\nexport default Months;","import React, { Component } from \"react\"\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { Input, Form, Button, Grid, TextArea, Label } from \"semantic-ui-react\";\nimport ReactCrop from \"react-image-crop\";\nimport cloudinary from \"cloudinary/lib/cloudinary\";\nimport axios from \"axios\";\nimport Months from \"../../constants/months\";\nimport { withAuthorization } from \"../firebase/Session\";\nimport { BACKEND, SIGN_IN, CREATE_CHARACTER, VIEW_CHARACTER } from \"../../constants/routes\";\n\nconst INITIAL_STATE = {\n    character: {\n        name: \"\",\n        basicinfo: {\n            age: 0,\n            gender: \"\",\n            birthmonth: 0,\n            birthday: 1,\n            relationships: \"\",\n            backstory: \"\"\n        },\n        appearance: {\n            hair: \"#000000\",\n            eyes: \"#000000\",\n            description: \"\",\n            image: \"\"\n        },\n        personality: {\n            traits: \"\",\n            likes: \"\",\n            dislikes: \"\",\n            habits: \"\",\n            quirks: \"\"\n        }\n    },\n    imageSrc: \"\",\n    crop: {\n        aspect: 1,\n        width: 50,\n        x: 0,\n        y: 0\n    },\n    pixelCrop: {},\n    hasSubmittedAtLeastOnce: false\n}\n\nclass CharacterForm extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        if (this.props.character)\n            this.setState({ character: this.props.character });\n    }\n\n    onChange = event =>\n    {\n        const character = this.state.character;\n        character[event.target.name] = event.target.value;\n        this.setState({ character: character });\n    }\n\n    onChangeBasic = event =>\n    {\n        const character = this.state.character;\n        character.basicinfo[event.target.name] = event.target.value;\n        this.setState({ character: character });\n    }\n\n    onChangeAppearance = event =>\n    {\n        const character = this.state.character;\n        character.appearance[event.target.name] = event.target.value;\n        this.setState({ character: character });\n    }\n\n    onChangePersonality = event =>\n    {\n        const character = this.state.character;\n        character.personality[event.target.name] = event.target.value;\n        this.setState({ character: character });\n    }\n\n    onChangeCrop = (crop, pixelCrop) =>\n    {\n        this.setState({ crop, pixelCrop });\n    }\n\n    onSubmit = event =>\n    {\n        event.preventDefault();\n        this.setState({ hasSubmittedAtLeastOnce: true });\n        this.props.onSubmit(this.state, this.imageRef);\n    }\n\n    onSelectFile = event =>\n    {\n        if (event.target.files && event.target.files.length > 0)\n        {\n            const reader = new FileReader();\n            reader.addEventListener('load', () =>\n                this.setState({ imageSrc: reader.result }),\n            );\n            reader.readAsDataURL(event.target.files[0]);\n        }\n    }\n\n    onImageLoaded = (image, pixelCrop) =>\n    {\n        this.imageRef = image;\n    };\n\n    MonthsDropdown = info =>\n    {\n        const { myself } = info.info;\n        const { character } = myself.state;\n\n        const monthElements = Months.map((month, index) =>\n            (\n                <option value={month.key} key={index}>{month.text}</option>\n            ));\n\n        return (\n            <select name=\"birthmonth\" placeholder=\"Month\" value={character.basicinfo.birthmonth} onChange={myself.onChangeBasic}>{monthElements}</select>\n        )\n    }\n\n    render()\n    {\n        const { character, hasSubmittedAtLeastOnce } = this.state;\n        const { actionName } = this.props;\n        const isInvalid = (\n            character.name === \"\" ||\n            character.age === null\n        );\n\n        return (\n            <Form onSubmit={this.onSubmit}>\n                <Grid columns={2} centered stackable>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Grid columns={2} stackable>\n                                <Grid.Row columns={1}><Grid.Column>\n                                    <center><Label size=\"big\">General Info</Label></center>\n                                </Grid.Column></Grid.Row>\n                                <Grid.Row>\n                                    <Grid.Column>\n                                        <Input\n                                            error={hasSubmittedAtLeastOnce && character.name === \"\"}\n                                            fluid\n                                            labelPosition='right corner'\n                                            label={{ icon: 'asterisk' }}\n                                            name=\"name\"\n                                            value={character.name}\n                                            onChange={this.onChange}\n                                            placeholder=\"Name\" />\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <Input\n                                            fluid\n                                            error={hasSubmittedAtLeastOnce && character.age === null}\n                                            type=\"number\"\n                                            name=\"age\"\n                                            value={character.basicinfo.age}\n                                            onChange={this.onChangeBasic}\n                                            placeholder=\"Age\" />\n                                    </Grid.Column>\n                                </Grid.Row>\n                                <Grid.Row columns={4}>\n                                    <Grid.Column width={8}>\n                                        <Input\n                                            fluid\n                                            name=\"gender\"\n                                            value={character.basicinfo.gender}\n                                            onChange={this.onChangeBasic}\n                                            placeholder=\"Gender\" />\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <this.MonthsDropdown info={{ myself: this }} />\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <Input\n                                            fluid\n                                            type=\"number\"\n                                            min=\"1\"\n                                            max=\"31\"\n                                            name=\"birthday\"\n                                            value={character.basicinfo.birthday}\n                                            onChange={this.onChangeBasic}\n                                            placeholder=\"Birthday\" />\n                                    </Grid.Column>\n                                </Grid.Row>\n                                <Grid.Row columns={1}><Grid.Column>\n                                    <TextArea\n                                        name=\"relationships\"\n                                        value={character.basicinfo.relationships}\n                                        onChange={this.onChangeBasic}\n                                        placeholder=\"Relationships\" />\n                                </Grid.Column></Grid.Row>\n                                <Grid.Row columns={1}><Grid.Column>\n                                    <TextArea\n                                        name=\"backstory\"\n                                        value={character.basicinfo.backstory}\n                                        onChange={this.onChangeBasic}\n                                        placeholder=\"Backstory\" />\n                                </Grid.Column></Grid.Row>\n                            </Grid>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Grid columns={1}>\n                                <Grid.Row><Grid.Column>\n                                    <center><Label size=\"big\">Image</Label></center>\n                                </Grid.Column></Grid.Row>\n                                <Grid.Row><Grid.Column>\n                                    <Input\n                                        fluid\n                                        type=\"file\"\n                                        onChange={this.onSelectFile} />\n                                    <ReactCrop\n                                        src={this.state.imageSrc}\n                                        crop={this.state.crop}\n                                        onChange={this.onChangeCrop}\n                                        onImageLoaded={this.onImageLoaded}\n                                        onComplete={this.onCropComplete} />\n                                </Grid.Column></Grid.Row>\n                            </Grid>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Grid columns={2}>\n                                <Grid.Row columns={1}><Grid.Column>\n                                    <center><Label size=\"big\">Appearance Info</Label></center>\n                                </Grid.Column></Grid.Row>\n                                <Grid.Row>\n                                    <Grid.Column>\n                                        <center>\n                                            <p>Hair Color: {character.appearance.hair}</p>\n                                            <input\n                                                type=\"color\"\n                                                name=\"hair\"\n                                                value={character.appearance.hair}\n                                                onChange={this.onChangeAppearance}\n                                                placeholder=\"Hair\" />\n                                        </center>\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <center>\n                                            <p>Eye Color: {character.appearance.eyes}</p>\n                                            <input\n                                                type=\"color\"\n                                                name=\"eyes\"\n                                                value={character.appearance.eyes}\n                                                onChange={this.onChangeAppearance}\n                                                placeholder=\"Eyes\" />\n                                        </center>\n                                    </Grid.Column>\n                                </Grid.Row>\n                                <Grid.Row columns={1}><Grid.Column>\n                                    <TextArea\n                                        name=\"description\"\n                                        value={character.appearance.description}\n                                        onChange={this.onChangeAppearance}\n                                        placeholder=\"Description\" />\n                                </Grid.Column></Grid.Row>\n                            </Grid>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Grid columns={1}>\n                                <Grid.Row columns={1}><Grid.Column>\n                                    <center><Label size=\"big\">Personality Info</Label></center>\n                                </Grid.Column></Grid.Row>\n                                <Grid.Row><Grid.Column><TextArea\n                                    name=\"traits\"\n                                    value={character.personality.traits}\n                                    onChange={this.onChangePersonality}\n                                    placeholder=\"Traits\" />\n                                </Grid.Column></Grid.Row>\n                                <Grid.Row><Grid.Column><TextArea\n                                    name=\"likes\"\n                                    value={character.personality.likes}\n                                    onChange={this.onChangePersonality}\n                                    placeholder=\"Likes\" />\n                                </Grid.Column></Grid.Row>\n                                <Grid.Row><Grid.Column><TextArea\n                                    name=\"dislikes\"\n                                    value={character.personality.dislikes}\n                                    onChange={this.onChangePersonality}\n                                    placeholder=\"Dislikes\" />\n                                </Grid.Column></Grid.Row>\n                                <Grid.Row><Grid.Column><TextArea\n                                    name=\"habits\"\n                                    value={character.personality.habits}\n                                    onChange={this.onChangePersonality}\n                                    placeholder=\"Habits\" />\n                                </Grid.Column></Grid.Row>\n                                <Grid.Row><Grid.Column><TextArea\n                                    name=\"quirks\"\n                                    value={character.personality.quirks}\n                                    onChange={this.onChangePersonality}\n                                    placeholder=\"Quirks\" />\n                                </Grid.Column></Grid.Row>\n                            </Grid>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Button disabled={isInvalid} type=\"submit\" primary>{actionName}</Button>\n                </Grid>\n            </Form>\n        );\n    }\n}\n\nconst condition = userInfo => !!userInfo;\nconst badCheck = history => history.push(SIGN_IN);\n\nexport default compose(withAuthorization(condition, badCheck), withRouter)(CharacterForm);","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Modal, Button } from \"semantic-ui-react\";\nimport { withAuthorization } from \"../firebase/Session\";\nimport { SIGN_IN, BACKEND, LIST_CHARACTERS, VIEW_CHARACTER, CREATE_CHARACTER } from \"../../constants/routes\";\nimport { CharacterGrid } from \"./\";\nimport CharacterForm from \"./CharacterForm\";\nimport cloudinary from \"cloudinary/lib/cloudinary\";\nimport { makeCancelable } from \"../../constants/extensions\";\n\nconst INITIAL_STATE = {\n    characters: []\n}\n\nclass ListCharacters extends Component\n{\n    promises = [];\n\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        this.promises.splice(this.promises.length - 1, 0, makeCancelable(axios.post(`${BACKEND}${LIST_CHARACTERS}`, { token: localStorage.getItem(\"token\") })\n            .then(res =>\n            {\n                this.setState({ characters: res.data.characters });\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            })));\n    }\n\n    componentWillUnmount()\n    {\n        this.promises.forEach(promise => promise.cancel());\n    }\n\n    onSubmit = (state, imageRef) =>\n    {\n        const { character, pixelCrop, crop } = state;\n\n        if (imageRef && crop.width && crop.height)\n        {\n            const canvas = document.createElement('canvas');\n            canvas.width = 250;\n            canvas.height = 250;\n            const ctx = canvas.getContext('2d');\n\n            ctx.drawImage(\n                imageRef,\n                pixelCrop.x,\n                pixelCrop.y,\n                pixelCrop.width,\n                pixelCrop.height,\n                0,\n                0,\n                250,\n                250\n            );\n\n            cloudinary.config({\n                cloud_name: process.env.REACT_APP_CLOUDINARY_NAME,\n                api_key: process.env.REACT_APP_CLOUDINARY_KEY,\n                api_secret: process.env.REACT_APP_CLOUDINARY_SECRET\n            });\n\n            cloudinary.uploader.upload(canvas.toDataURL(), { tags: \"user_image\" })\n                .then(image =>\n                {\n                    character.appearance.image = image.url;\n                    axios.post(`${BACKEND}${CREATE_CHARACTER}`, { token: localStorage.token, character: character })\n                        .then(res =>\n                        {\n                            this.setState({ ...INITIAL_STATE });\n                            this.props.history.push(VIEW_CHARACTER.replace(\":character_id\", res.data.character._id));\n                        })\n                        .catch(error =>\n                        {\n                            console.log(error);\n                        });\n                })\n                .catch(error =>\n                {\n                    console.log(error);\n                });\n        }\n    }\n\n    render()\n    {\n        return (\n            <div>\n                <Container>\n                    <Modal trigger={<center><Button primary>Create Character</Button></center>} dimmer=\"blurring\" closeOnDimmerClick={false} closeIcon>\n                        <Modal.Header>New Character</Modal.Header>\n                        <Modal.Content scrolling>\n                            <CharacterForm onSubmit={this.onSubmit} actionName=\"Create Character\" />\n                        </Modal.Content>\n                    </Modal>\n                    {!!this.state.characters ?\n                        <CharacterGrid characters={this.state.characters} />\n                        :\n                        null\n                    }\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst condition = userInfo => !!userInfo;\nconst badCheck = history => history.push(SIGN_IN);\n\nexport default withAuthorization(condition, badCheck)(ListCharacters);","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Header, Label, Loader, Image, Container, Table, Modal, Button } from \"semantic-ui-react\";\nimport { BACKEND, VIEW_CHARACTER, UPDATE_CHARACTER } from \"../../constants/routes\";\nimport { withAuthStatic } from \"../firebase/Session\";\nimport Months from \"../../constants/months\";\nimport CharacterForm from \"./CharacterForm\";\nimport cloudinary from \"cloudinary/lib/cloudinary\";\n\nconst INITIAL_STATE = {\n    character: {\n        name: \"\",\n        basicinfo: {\n            age: \"\",\n            gender: \"\",\n            birthmonth: 0,\n            birthday: 1,\n            relationships: \"\",\n            backstory: \"\"\n        },\n        appearance: {\n            hair: \"#000000\",\n            eyes: \"#000000\",\n            description: \"\",\n            image: \"\"\n        },\n        personality: {\n            traits: \"\",\n            likes: \"\",\n            dislikes: \"\",\n            habits: \"\",\n            quirks: \"\"\n        }\n    },\n    hairColor: {},\n    eyeColor: {},\n    ready: false\n}\n\nclass ViewCharacter extends Component\n{\n    initialCharacter;\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        axios.post(`${BACKEND}${VIEW_CHARACTER.replace(\":character_id\", this.props.match.params.character_id)}`,\n            { token: localStorage.token })\n            .then(res =>\n            {\n                this.setState({ character: res.data.character });\n                this.initialCharacter = {\n                    _id: this.state.character._id,\n                    name: `${this.state.character.name}`,\n                    basicinfo: { ...this.state.character.basicinfo },\n                    appearance: { ...this.state.character.appearance },\n                    personality: { ...this.state.character.personality }\n                };\n\n                axios.get(`https://www.thecolorapi.com/id?format=json&hex=${this.state.character.appearance.eyes.replace(\"#\", \"\")}`)\n                    .then(res =>\n                    {\n                        this.setState({ eyeColor: res.data });\n\n                        axios.get(`https://www.thecolorapi.com/id?format=json&hex=${this.state.character.appearance.hair.replace(\"#\", \"\")}`)\n                            .then(res =>\n                            {\n                                this.setState({ hairColor: res.data, ready: true });\n                            })\n                            .catch(error =>\n                            {\n                                console.log(error);\n                            });\n                    })\n                    .catch(error =>\n                    {\n                        console.log(error);\n                    });\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    onSubmit = (state, imageRef) =>\n    {\n        const { character, pixelCrop, crop } = state;\n        let modifiedCharacter = { _id: character._id };\n        const basicLines = [\"age\", \"gender\", \"birthmonth\", \"birthday\", \"relationships\", \"backstory\"];\n        const appearanceLines = [\"hair\", \"eyes\", \"description\", \"image\"];\n        const personalityLines = [\"traits\", \"likes\", \"dislikes\", \"habits\", \"quirks\"];\n\n        if (character.name !== this.initialCharacter.name)\n            modifiedCharacter.name = character.name;\n\n        basicLines.forEach(element =>\n        {\n            if (character.basicinfo[element] !== this.initialCharacter.basicinfo[element])\n            {\n                if (modifiedCharacter.basicinfo == null)\n                    modifiedCharacter.basicinfo = {};\n                modifiedCharacter.basicinfo[element] = character.basicinfo[element];\n            }\n        });\n\n        appearanceLines.forEach(element =>\n        {\n            if (character.appearance[element] !== this.initialCharacter.appearance[element])\n            {\n                if (modifiedCharacter.appearance == null)\n                    modifiedCharacter.appearance = {};\n                modifiedCharacter.appearance[element] = character.appearance[element];\n            }\n        });\n\n        personalityLines.forEach(element =>\n        {\n            if (character.personality[element] !== this.initialCharacter.personality[element])\n            {\n                if (modifiedCharacter.personality == null)\n                    modifiedCharacter.personality = {};\n                modifiedCharacter.personality[element] = character.personality[element];\n            }\n        });\n\n        if (imageRef && crop.width && crop.height)\n        {\n            const canvas = document.createElement('canvas');\n            canvas.width = 250;\n            canvas.height = 250;\n            const ctx = canvas.getContext('2d');\n\n            ctx.drawImage(\n                imageRef,\n                pixelCrop.x,\n                pixelCrop.y,\n                pixelCrop.width,\n                pixelCrop.height,\n                0,\n                0,\n                250,\n                250\n            );\n\n            cloudinary.config({\n                cloud_name: process.env.REACT_APP_CLOUDINARY_NAME,\n                api_key: process.env.REACT_APP_CLOUDINARY_KEY,\n                api_secret: process.env.REACT_APP_CLOUDINARY_SECRET\n            });\n\n            cloudinary.uploader.upload(canvas.toDataURL(), { tags: \"user_image\" })\n                .then(image =>\n                {\n                    if (modifiedCharacter.appearance == null)\n                        modifiedCharacter.appearance = {};\n                    modifiedCharacter.appearance.image = image.url;\n                    this.sendModifiedCharacter(modifiedCharacter);\n                })\n                .catch(error =>\n                {\n                    console.log(error);\n                });\n        }\n        else\n        {\n            this.sendModifiedCharacter(modifiedCharacter);\n        }\n    }\n\n    sendModifiedCharacter = modifiedCharacter =>\n    {\n        console.log(modifiedCharacter);\n        axios.post(`${BACKEND}${UPDATE_CHARACTER}`, { token: localStorage.token, character: modifiedCharacter })\n            .then(res =>\n            {\n                this.props.history.push(VIEW_CHARACTER.replace(\":character_id\", this.state.character._id));\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    render()\n    {\n        const { character, ready, eyeColor, hairColor } = this.state;\n        const { basicinfo } = character;\n\n        return (\n            <Container>\n                {ready ?\n                    [\n                        <Table key={1} inverted attached=\"top\"><Table.Body>\n                            <Table.Row>\n                                <Table.Cell>\n                                    <center><Header as=\"h1\" inverted size=\"huge\">{character.name}</Header></center>\n                                </Table.Cell>\n                            </Table.Row>\n                        </Table.Body></Table>,\n                        <Table key={2} attached=\"bottom\"><Table.Body>\n                            {\n                                this.props.userInfo && `${this.props.userInfo.user._id}` === `${character.user}` ?\n                                    <Table.Row>\n                                        <Table.Cell>\n                                            <Modal key={0} trigger={<center><Button primary>Modify Character</Button></center>} dimmer=\"blurring\" closeOnDimmerClick={false} closeIcon>\n                                                <Modal.Header>Modify {character.name}</Modal.Header>\n                                                <Modal.Content scrolling>\n                                                    <CharacterForm character={character} onSubmit={this.onSubmit} actionName=\"Update Character\" />\n                                                </Modal.Content>\n                                            </Modal>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    :\n                                    null\n                            }\n                            <Table.Row>\n                                <Table.Cell>\n                                    <Table fixed basic=\"very\">\n                                        <Table.Header>\n                                            <Table.Row>\n                                                <Table.HeaderCell textAlign=\"center\">Age</Table.HeaderCell>\n                                                <Table.HeaderCell textAlign=\"center\">Gender</Table.HeaderCell>\n                                                <Table.HeaderCell textAlign=\"center\">Birthday</Table.HeaderCell>\n                                                <Table.HeaderCell textAlign=\"center\">Eyes</Table.HeaderCell>\n                                                <Table.HeaderCell textAlign=\"center\">Hair</Table.HeaderCell>\n                                            </Table.Row>\n                                        </Table.Header>\n                                        <Table.Body><Table.Row>\n                                            <Table.Cell textAlign=\"center\">{basicinfo.age}</Table.Cell>\n                                            <Table.Cell textAlign=\"center\">{basicinfo.gender}</Table.Cell>\n                                            <Table.Cell textAlign=\"center\">{Months[basicinfo.birthmonth].text} {basicinfo.birthday}</Table.Cell>\n                                            <Table.Cell textAlign=\"center\">\n                                                <div className=\"color-background\" style={{ backgroundColor: eyeColor.name.closest_named_hex, color: eyeColor.contrast.value }}>\n                                                    {eyeColor.name.value}\n                                                </div>\n                                            </Table.Cell>\n                                            <Table.Cell textAlign=\"center\">\n                                                <div className=\"color-background\" style={{ backgroundColor: hairColor.name.closest_named_hex, color: hairColor.contrast.value }}>\n                                                    {hairColor.name.value}\n                                                </div>\n                                            </Table.Cell>\n                                        </Table.Row></Table.Body>\n                                    </Table>\n                                    <center><Label><Header as=\"h2\">Description</Header></Label></center>\n                                    <Image src={character.appearance.image} floated=\"left\" />\n                                    <pre>{character.appearance.description}</pre>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell>\n                                    <center><Label><Header as=\"h2\">Traits</Header></Label></center>\n                                    <pre>{character.personality.traits}</pre>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell>\n                                    <center><Label><Header as=\"h2\">Likes</Header></Label></center>\n                                    <pre>{character.personality.likes}</pre>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell>\n                                    <center><Label><Header as=\"h2\">Dislikes</Header></Label></center>\n                                    <pre>{character.personality.dislikes}</pre>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell>\n                                    <center><Label><Header as=\"h2\">Habits</Header></Label></center>\n                                    <pre>{character.personality.habits}</pre>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell>\n                                    <center><Label><Header as=\"h2\">Quirks</Header></Label></center>\n                                    <pre>{character.personality.quirks}</pre>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell>\n                                    <center><Label><Header as=\"h2\">Backstory</Header></Label></center>\n                                    <pre>{character.basicinfo.backstory}</pre>\n                                </Table.Cell>\n                            </Table.Row>\n                        </Table.Body></Table>] :\n                    <Loader active />}\n            </Container>\n        )\n    }\n}\n\nexport default withAuthStatic(ViewCharacter);","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { Button, Container } from \"semantic-ui-react\";\nimport 'react-image-crop/lib/ReactCrop.scss';\nimport { withAuthorization } from \"../firebase/Session\";\nimport { SIGN_IN, CREATE_CHARACTER } from \"../../constants/routes\";\nimport CharacterForm from \"./CharacterForm\";\n\nclass CreateCharacter extends Component\n{\n    render()\n    {\n        return (\n            <Container>\n                <CharacterForm />\n            </Container>\n        );\n    }\n}\n\nclass CreateCharacterButton extends Component\n{\n    render()\n    {\n        return (\n            <center><Link to={CREATE_CHARACTER}><Button primary>Create Character</Button></Link></center>\n        )\n    }\n}\n\nconst condition = userInfo => !!userInfo;\nconst badCheck = history => history.push(SIGN_IN);\n\nexport default compose(withAuthorization(condition, badCheck), withRouter)(CreateCharacter);\nexport { CreateCharacterButton };","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Card, Container, Image } from \"semantic-ui-react\";\nimport { VIEW_CHARACTER } from \"../../constants/routes\";\n\n/*<Card\n    image='/images/avatar/large/elliot.jpg'\n    header='Elliot Baker'\n    meta='Friend'\n    description='Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.'\n    extra={extra}\n/>*/\n\nclass CharacterCard extends Component\n{\n    onClick = character =>\n    {\n        if (this.props.onClick)\n            this.props.onClick(character);\n        else\n            this.goToPage(VIEW_CHARACTER.replace(\":character_id\", character._id))\n    }\n\n    goToPage = to =>\n    {\n        this.props.history.push(to);\n    }\n\n    render()\n    {\n        const { actionButtons, character } = this.props;\n\n        return (\n            <Card link className=\"character-card\" onClick={() => this.onClick(character)}>\n                <Image src={character.appearance.image} />\n                <Card.Content>\n                    <Card.Header>{character.name}</Card.Header>\n                    {actionButtons}\n                </Card.Content>\n            </Card>\n        )\n    }\n}\n\nclass CharacterGridBase extends Component\n{\n    render()\n    {\n        const { actionButtons } = this.props;\n        const characterList = this.props.characters.map((character, index) => (\n            <CharacterCard key={index} character={character} history={this.props.history} onClick={this.props.onClick} actionButtons={actionButtons} />\n        ));\n\n        return (<Container className=\"character-grid\"><Card.Group centered>{characterList}</Card.Group></Container>);\n    }\n}\n\nconst CharacterGrid = withRouter(CharacterGridBase);\n\nexport default withRouter(CharacterCard);\nexport { CharacterGrid };","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Container, Table, Header, Button, Modal, ModalDescription, Form } from \"semantic-ui-react\";\nimport { compose } from \"recompose\";\nimport axios from \"axios\";\nimport { withAuthStatic } from \"../firebase/Session\";\nimport { CharacterGrid } from \"../Character\";\nimport { BACKEND, STORY_VIEW, CREATE_CHAPTER, LIST_CHARACTERS, CHAPTER_VIEW, APPLY_CHARACTER } from \"../../constants/routes\";\n\nconst INITIAL_STATE = {\n    story: {\n        author: {},\n        genres: [],\n        chapters: [],\n        characters: []\n    },\n    characterList: null,\n    selectedCharacter: 0\n}\n\nclass ViewStory extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        this.getStory();\n\n        if (!!this.props.userInfo)\n        {\n            axios.post(`${BACKEND}${LIST_CHARACTERS}`, { token: localStorage.getItem(\"token\") })\n                .then(res =>\n                {\n                    const chars = res.data.characters;\n                    if (chars.length === 0)\n                        this.setState({ characterList: null });\n                    else\n                        this.setState({ characterList: res.data.characters, selectedCharacter: res.data.characters[0]._id });\n                })\n                .catch(error =>\n                {\n                    console.log(error);\n                });\n        }\n    }\n\n    getStory = () =>\n    {\n        axios.get(`${BACKEND}${STORY_VIEW.replace(\":story_id\", this.props.match.params.story_id)}`)\n            .then(res =>\n            {\n                this.setState({ story: res.data.story });\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    listGenres(genres)\n    {\n        const genreList = genres.genres.map((genre, index) => (\n            <Table.Cell key={index} value={index}><center>{genre.name}</center></Table.Cell>\n        ));\n\n        return (\n            <Table.Row>{genreList}</Table.Row>\n        )\n    }\n\n    listCharacterOptions = info =>\n    {\n        const { myself } = info.info;\n        const { state } = myself;\n        const { characterList } = state;\n        const options = characterList.map((character, index) =>\n            (\n                <option key={index} value={character._id}>{character.name}</option>\n            ));\n\n        return (<select placeholder=\"Characters\" value={state.selectedCharacter} onChange={myself.onChooseCharacterChange}>{options}</select>);\n    }\n\n    onLinkClick = to =>\n    {\n        this.props.history.push(to);\n    }\n\n    onChooseCharacterChange = event =>\n    {\n        this.setState({ selectedCharacter: event.target.value });\n    }\n\n    onApplyCharacter = event =>\n    {\n        event.preventDefault();\n        axios.post(`${BACKEND}${APPLY_CHARACTER}`,\n            { token: localStorage.getItem(\"token\"), character_id: this.state.selectedCharacter, story_id: this.state.story._id })\n            .then(res =>\n            {\n                const { message, status } = res.data;\n\n                alert(message);\n\n                if (status === \"added\")\n                {\n                    this.setState({ story: INITIAL_STATE.story });\n                    this.getStory();\n                }\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    listChapters(info)\n    {\n        const { myself, onLinkClick } = info.info;\n        const { props, state } = myself;\n        const { story, characterList } = state;\n        const { chapters, characters } = story;\n        const { userInfo } = props;\n        const { story_id } = props.match.params;\n        const isCreator = (!!userInfo && userInfo.user.username === story.author.username);\n        const chapterList = chapters.map((chapter, index) => (\n            <Table.Row key={index}>\n                <Table.Cell><Link to={CHAPTER_VIEW.replace(\":story_id\", story_id).replace(\":chapter_name\", index)}>{chapter.title}</Link></Table.Cell>\n                <Table.Cell>{chapter.description}</Table.Cell>\n            </Table.Row>\n        ));\n\n        return (\n            <Table.Body>\n                <Table.Row><Table.Cell>\n                    {isCreator ?\n                        <Button primary onClick={event => { onLinkClick(CREATE_CHAPTER.replace(\":story_id\", story_id)) }}>Create Chapter</Button> :\n                        null\n                    }\n                    {!!userInfo ?\n                        <Modal trigger={<Button secondary>Add Character</Button>}>\n                            <Modal.Header>Choose your character</Modal.Header>\n                            <Modal.Content>\n                                <ModalDescription>\n                                    {!!characterList ?\n                                        <Form onSubmit={myself.onApplyCharacter}>\n                                            <myself.listCharacterOptions info={{ myself: myself }} />\n                                            <Button primary type=\"submit\">\n                                                {\n                                                    story.closed_group ?\n                                                        \"Apply\"\n                                                        :\n                                                        \"Join\"\n                                                }\n                                            </Button>\n                                        </Form> :\n                                        <div>Loading...</div>}\n                                </ModalDescription>\n                            </Modal.Content>\n                        </Modal> :\n                        null\n                    }\n                    <Modal trigger={<Button secondary>Roster</Button>}>\n                        <Modal.Header>Character Roster</Modal.Header>\n                        <Modal.Content>\n                            <ModalDescription>\n                                {!!characters ?\n                                    <CharacterGrid characters={characters} /> :\n                                    <div>Loading...</div>}\n                            </ModalDescription>\n                        </Modal.Content>\n                    </Modal>\n                </Table.Cell></Table.Row>\n                {chapterList}\n            </Table.Body>\n        );\n    }\n\n    render()\n    {\n        return (\n            <Container>\n                <Table inverted attached=\"top\">\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.HeaderCell>\n                                <center><Header as=\"h1\" inverted>{this.state.story.title}</Header></center>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.HeaderCell>\n                                <center><Header as=\"h4\" inverted>by {this.state.story.author.username}</Header></center>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n                <Table attached>\n                    <Table.Body>\n                        <this.listGenres genres={this.state.story.genres} />\n                        <Table.Row>\n                            <Table.Cell><center>{this.state.story.description}</center></Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n                <Table attached>\n                    <this.listChapters info={{ myself: this, props: this.props, state: this.state, onLinkClick: this.onLinkClick }} />\n                </Table>\n            </Container>\n        );\n    }\n}\n\nexport default compose(withAuthStatic, withRouter)(ViewStory);","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Container, Input, Table, Button, Loader, Header } from \"semantic-ui-react\";\nimport { compose } from \"recompose\";\nimport { withAuthStatic } from \"../firebase/Session\";\nimport { STORY_VIEW, BACKEND } from \"../../constants/routes\";\n\nconst INITIAL_STATE = {\n    story: {\n        _id: \"\",\n        author: {},\n        genres: [],\n        chapters: []\n    },\n    chapter: {\n        title: \"\",\n        description: \"\"\n    }\n}\n\nclass CreateChapter extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onChange = event =>\n    {\n        const newChapter = this.state.chapter;\n        newChapter[event.target.name] = event.target.value;\n        this.setState({ chapter: newChapter });\n    }\n\n    onSubmit = event =>\n    {\n        event.preventDefault();\n        const { story, chapter } = this.state;\n\n        axios.post(`${BACKEND}/story/add_chapter/${this.props.match.params.story_id}`, {\n            token: localStorage.getItem(\"token\"),\n            story: story,\n            chapter: chapter\n        })\n            .then(updatedStory =>\n            {\n                this.props.history.push(STORY_VIEW.replace(\":story_id\", story._id));\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    componentDidMount()\n    {\n        axios.get(`${BACKEND}${STORY_VIEW.replace(\":story_id\", this.props.match.params.story_id)}`)\n            .then(res =>\n            {\n                this.setState({ story: res.data.story, chapter: { title: `Chapter ${res.data.story.chapters.length + 1}` } });\n                if (this.props.userInfo.user.username !== this.state.story.author.username)\n                    this.props.history.push(`${STORY_VIEW.replace(\":story_id\", this.props.match.params.story_id)}`);\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    render()\n    {\n        return (\n            <Container>\n                <Table attached=\"top\" inverted>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell>\n                                <center><Header as=\"h1\" inverted>{this.state.chapter.title}</Header></center>\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n                <Table attached>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell>\n                                {(!!this.state.story.author) ?\n                                    <form onSubmit={this.onSubmit}>\n                                        <Input fluid onChange={this.onChange} name=\"description\" value={this.state.chapter.description} placeholder=\"description\" />\n                                        <center><Button type=\"submit\" primary>Create Chapter</Button></center>\n                                    </form> :\n                                    <Loader active />}\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n            </Container>\n        );\n    }\n}\n\nexport default compose(withRouter, withAuthStatic)(CreateChapter);","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, Form, TextArea } from \"semantic-ui-react\";\nimport { CREATE_POST } from \"../../constants/routes\";\n\nconst INITIAL_STATE = {\n    postData: \"\",\n    character: 0\n}\n\nclass CreatePost extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = (event) =>\n    {\n        //\n    }\n\n    onChange = (event) =>\n    {\n        this.setState({ postData: event.target.value });\n    }\n\n    render()\n    {\n        return (\n            <Form onSubmit={this.onSubmit}>\n                <select placeholder=\"Characters\" value={this.state.character}>\n                    {\n                        this.props.characters.map((character, index) =>\n                            (\n                                <option key={index} value={character._id}>{character.name}</option>\n                            ))\n                    }\n                </select>\n                <TextArea placeholder=\"paragraph\" name=\"postData\" onChange={this.onChange} />\n                <Button primary type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nclass CreatePostButtonBase extends Component\n{\n    clickLink = (to) =>\n    {\n        this.props.history.push(to);\n    }\n\n    render()\n    {\n        const { story_id } = this.props.info;\n\n        return (\n            <Button primary onClick={event => { this.clickLink(CREATE_POST.replace(\":story_id\", story_id)) }}>Write Paragraph</Button>\n        )\n    }\n}\n\nconst CreatePostButton = withRouter(CreatePostButtonBase);\n\nexport default CreatePost;\nexport { CreatePostButton };","import React, { Component } from \"react\";\nimport { Container, Loader, Table, Image, Header, Button } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { withAuthStatic } from \"../firebase/Session\";\nimport { BACKEND, CHAPTER_VIEW } from \"../../constants/routes\";\nimport CreatePost from \"./CreatePost\";\n\nconst INITIAL_STATE = {\n    chapter: null,\n    showReplyForm: false\n}\n\nclass ViewChapter extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        const { story_id, chapter_name } = this.props.match.params;\n        axios.get(`${BACKEND}${CHAPTER_VIEW.replace(\":story_id\", story_id).replace(\":chapter_name\", chapter_name)}`)\n            .then(res =>\n            {\n                this.setState({ chapter: res.data.chapter });\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    createParagraphClick = event =>\n    {\n        this.setState({ showReplyForm: !this.state.showReplyForm });\n    }\n\n    listReplies(info)\n    {\n        const { myself } = info.info;\n        const { state, props } = myself;\n        const { chapter, showReplyForm } = state;\n        const { userInfo } = props;\n        const TableBody = (post) => (\n            <Table.Body>\n                <Table.Row>\n                    <Table.Cell>\n                        <Image floated='left' src={post.author.appearance.image} />\n                        <pre>{post.description}</pre>\n                    </Table.Cell>\n                </Table.Row>\n            </Table.Body>\n        );\n\n        const replies = chapter.posts.map((post, index) =>\n            (\n                <Table.Row key={index}><Table.Cell>\n                    <Table attached=\"top\" inverted>\n                        <Table.Body>\n                            <Table.Row>\n                                <Table.Cell>\n                                    <center><Header as=\"h2\" inverted>{post.author.name}</Header></center>\n                                </Table.Cell>\n                            </Table.Row>\n                        </Table.Body>\n                    </Table>\n                    {(index === chapter.posts.length - 1) ?\n                        <Table attached=\"bottom\">{TableBody(post)}</Table> :\n                        <Table attached>{TableBody(post)}</Table>\n                    }\n                </Table.Cell></Table.Row>\n            ));\n\n        return (\n            <Table.Body>\n                <Table.Row><Table.Cell>\n                    {!!userInfo ?\n                        <Button primary={!showReplyForm} secondary={showReplyForm} onClick={myself.createParagraphClick}>\n                            {showReplyForm ? \"Cancel\" : \"Create Paragraph\"}\n                        </Button> :\n                        null\n                    }\n                    {\n                        showReplyForm ?\n                            <CreatePost /> :\n                            null\n                    }\n                </Table.Cell></Table.Row>\n                {replies}\n            </Table.Body>\n        );\n    }\n\n    render()\n    {\n        const { state } = this;\n\n        return (\n            <Container>\n                {!!state.chapter ?\n                    <Table className=\"basic-table\">\n                        <this.listReplies info={{ myself: this }} />\n                    </Table> :\n                    <Loader active />\n                }\n            </Container>\n        );\n    }\n}\n\nexport default withAuthStatic(ViewChapter);","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { Card, Header, Loader } from \"semantic-ui-react\";\nimport { STORY_VIEW } from \"../../constants/routes\";\nimport BookCover from \"../../images/bookCover.jpg\";\nimport { makeCancelable } from \"../../constants/extensions\";\nimport StoryList from \"./StoryList\";\n\nconst INITIAL_STATE = {\n    backgroundColor: \"#FFFFFF55\",\n    fontColor: \"black\"\n}\n\nclass Book extends Component\n{\n    promises = [];\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        if (this.props.story)\n            this.promises.splice(this.promises.length - 1, 0,\n                makeCancelable(axios.get(`https://www.thecolorapi.com/id?format=json&hex=${this.props.story.color.replace(\"#\", \"\")}`)\n                    .then(res =>\n                    {\n                        this.setState({ backgroundColor: `${res.data.name.closest_named_hex}55`, fontColor: res.data.contrast.value });\n                    })\n                    .catch(error =>\n                    {\n                        console.log(error);\n                    })));\n    }\n\n    componentWillUnmount()\n    {\n        this.promises.forEach(promise => promise.cancel());\n    }\n\n    /* goToPage\n     * Open link 'to'\n    */\n    goToPage = (to) =>\n    {\n        this.props.history.push(to);\n    }\n\n    render()\n    {\n        const { story, loader } = this.props;\n        const date = story ? new Date(story.date_created) : null;\n        const { backgroundColor, fontColor } = this.state;\n        const dateCreated = date ? `${date.getMonth()}/${date.getDate()}/${date.getFullYear()}` : null;\n\n        return (\n            <Card\n                link\n                className={`book-card`}\n                style={{\n                    width: \"150px\",\n                    height: \"175px\",\n                    backgroundImage: `url(https://res.cloudinary.com/dbfb8rwim/image/upload/v1556447856/bookCover.jpg)`,\n                    color: fontColor,\n                    backgroundSize: \"150px auto\"\n                }}\n                onClick={() => { if (!loader) this.goToPage(STORY_VIEW.replace(\":story_id\", story._id)); }}>\n                {\n                    <div className=\"content\" style={{ backgroundColor, color: fontColor, display: \"flex\", alignItems: \"center\" }}>\n                        {\n                            loader ?\n                                <Loader active />\n                                :\n                                <div style={{ width: \"100%\" }}>\n                                    <Header style={{ color: fontColor }}>{story.title}</Header>\n                                    <i>{story.author.username}</i> <br />\n                                    {dateCreated}\n                                </div>\n                        }\n                    </div>\n                }\n            </Card>\n        )\n    }\n}\n\nexport default withRouter(Book);","import React, { Component } from \"react\";\nimport { Card, Checkbox } from \"semantic-ui-react\";\n\nclass GenreList extends Component\n{\n    render()\n    {\n        const { genres, onChange, selections } = this.props;\n\n        return (\n            <Card.Group centered>\n                {\n                    genres.map((genre, index) =>\n                        (\n                            <Card key={index} style={{ width: \"auto\", padding: \"5px 10px\" }}>\n                                <Checkbox\n                                    toggle\n                                    name={genre.name}\n                                    label={genre.name}\n                                    checked={selections && selections[genre.name]}\n                                    // defaultChecked={selections && selections[genre.name]}\n                                    onChange={event => { onChange(genre.name) }} />\n                            </Card>\n                        ))\n                }\n            </Card.Group>\n        );\n    }\n}\n\nexport default GenreList;","import React, { Component } from \"react\"\nimport { Form, Button, Table, TextArea, Input, Placeholder, Checkbox, Card } from \"semantic-ui-react\"\nimport BookCover from \"../../images/bookCover.jpg\";\nimport GenreList from \"./GenreList\";\n\nconst INITIAL_STATE = {\n    story: {\n        author: {},\n        chapters: [],\n        characters: [],\n        description: \"\",\n        genres: [],\n        subscribers: [],\n        applicantcharacters: [],\n        color: \"#000000\",\n        title: \"\"\n    },\n    genresSelection: {},\n    // title: \"\",\n    // description: \"\",\n    // closed_group: false,\n    // color: \"#000000\"\n}\n\nclass StoryForm extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        if (this.props.story)\n        {\n            let genresSelection = {};\n            const usedGenres = this.props.story.genres.map(genre => genre.name);\n            this.props.genres.forEach(genre =>\n            {\n                if (usedGenres.indexOf(genre.name) !== -1)\n                    genresSelection[genre.name] = true;\n                else\n                    genresSelection[genre.name] = false;\n            });\n            this.setState({ story: this.props.story, genresSelection: genresSelection });\n        }\n        else\n        {\n            let genresSelection = {};\n            this.props.genres.forEach(genre =>\n            {\n                genresSelection[genre.name] = false;\n            });\n            this.setState({ genresSelection: genresSelection });\n        }\n    }\n\n    onChange = event =>\n    {\n        let story = { ...this.state.story };\n        story[event.target.name] = event.target.value;\n        this.setState({ story: story });\n    }\n\n    onCheckboxChange = (event, { checked }) =>\n    {\n        let story = { ...this.state.story };\n        story.closed_group = checked;\n        this.setState({ story: story });\n    }\n\n    onGenreChange = genre =>\n    {\n        let genresSelection = { ...this.state.genresSelection };\n        genresSelection[genre] = !genresSelection[genre];\n        this.setState({ genresSelection: genresSelection });\n    }\n\n    onSubmit = event =>\n    {\n        event.preventDefault();\n        const story = { ...this.state.story };\n        const genresSelection = { ...this.state.genresSelection };\n        const { genres, onStorySubmit } = this.props;\n        let selectedGenres = [];\n\n        for (let i = 0; i < genres.length; i++)\n        {\n            if (genresSelection[genres[i].name])\n                selectedGenres.splice(selectedGenres.length, 0, genres[i]._id);\n        }\n\n        story.genres = selectedGenres;\n\n        onStorySubmit(story);\n    }\n\n    render()\n    {\n        const { story, genresSelection } = this.state;\n        const { title, description, color, closed_group } = story;\n        const { genres } = this.props;\n\n        return (\n            <Form onSubmit={this.onSubmit}>\n                <Table attached=\"top\">\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell collapsing>\n                                <Input fluid type=\"color\" onChange={this.onChange} name=\"color\" value={color} />\n                            </Table.Cell>\n                            <Table.Cell>\n                                <Input fluid type=\"text\" onChange={this.onChange} name=\"title\" value={title} placeholder=\"title\" />\n                            </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell width={2}>\n                                <Card\n                                    className={`book-card`}\n                                    style={{\n                                        width: \"150px\",\n                                        height: \"175px\",\n                                        backgroundImage: `url(https://res.cloudinary.com/dbfb8rwim/image/upload/v1556447856/bookCover.jpg)`,\n                                        backgroundSize: \"150px auto\"\n                                    }}>\n                                    <div className=\"Content\" style={{ backgroundColor: `${color}55`, height: \"100%\" }} />\n                                </Card>\n                            </Table.Cell>\n                            <Table.Cell>\n                                <TextArea onChange={this.onChange} name=\"description\" value={description} placeholder=\"description\" />\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n                <Table attached=\"bottom\">\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell textAlign=\"center\">\n                                <GenreList genres={genres} selections={genresSelection} onChange={this.onGenreChange} />\n                            </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell textAlign=\"right\">\n                                <Checkbox onChange={this.onCheckboxChange} name=\"closed_group\" checked={closed_group} toggle label=\"Require Character Approval\" />\n                            </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell textAlign=\"right\">\n                                <Button primary type=\"submit\">{this.props.actionText}</Button>\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n            </Form>\n        )\n    }\n}\n\nexport default StoryForm;","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthStatic } from \"../firebase/Session\";\nimport { compose } from \"recompose\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport axios from \"axios\";\nimport Book from \"./Book\";\nimport { Container, Button, Modal, Segment, Card, Message } from \"semantic-ui-react\";\nimport StoryForm from \"./StoryForm\";\nimport { BACKEND, STORY_VIEW, LIST_STORY } from \"../../constants/routes\";\nimport { makeCancelable } from \"../../constants/extensions\";\nimport GenreList from \"./GenreList\";\nimport BookCover from \"../../images/bookCover.jpg\";\n\nconst INITIAL_STATE = {\n    stories: null,\n    loadedQty: 0,\n    genreChecks: {},\n    filteredStories: [],\n    hasMore: true\n}\n\nclass StoryList extends Component\n{\n    fetchStoriesPromise = null;\n    keepLoadingDataRoutine = null;\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onStoryCreateSubmit = story =>\n    {\n        axios.post(`${BACKEND}/story/create`, {\n            token: localStorage.getItem(\"token\"),\n            story: story\n        }).then(res =>\n        {\n            this.props.history.push(STORY_VIEW.replace(\":story_id\", res.data.newStory._id));\n        }).catch(error =>\n        {\n            this.setState({ error: error });\n        });\n    }\n\n    /* componentDidMount\n     * Sends requests to backend and receives story list.\n    */\n    componentDidMount()\n    {\n        //TODO: Retrieve stories in parts.\n        this.PullDataPart(0, 30);\n    }\n\n    componentWillUnmount()\n    {\n        if (this.fetchStoriesPromise)\n            this.fetchStoriesPromise.cancel();\n    }\n\n    onGenreChange = genre =>\n    {\n        if (!!this.timeout)\n            clearTimeout(this.timeout);\n        const genreChecks = { ...this.state.genreChecks };\n        genreChecks[genre] = !genreChecks[genre];\n        this.setState({ genreChecks: genreChecks });\n        this.timeout = setTimeout(this.filterStories, 500);\n    }\n\n    /* filterStories\n     * Sets state.filteredStories to all stories that have all genreChecks assigned to them.\n    */\n    filterStories = () =>\n    {\n        const { stories, genreChecks } = this.state;\n        const { genres } = this.props;\n        const newFilter = [...stories];\n\n        if (this.checkFilters())\n        {\n            for (let i = 0; i < genres.length; i++)\n            {\n                const element = genreChecks[genres[i].name];\n\n                if (element === true)\n                {\n                    var iter = 0;\n                    while (iter < newFilter.length)\n                    {\n                        if (newFilter[iter].genres.indexOf(genres[i]._id) !== -1)\n                            iter++;\n                        else\n                            newFilter.splice(iter, 1);\n                    }\n                }\n            }\n        }\n\n        this.setState({ filteredStories: newFilter });\n    }\n\n    /* checkFilters\n     * Returns true if any filters are active, else returns false.\n    */\n    checkFilters = () =>\n    {\n        for (let i = 0; i < this.props.genres.length; i++)\n        {\n            const check = this.state.genreChecks[this.props.genres[i].name];\n            if (check === undefined) continue;\n            if (check === true)\n                return true;\n        }\n\n        return false;\n    }\n\n    fetchData = () =>\n    {\n        if (this.fetchStoriesPromise)\n            return;\n        this.PullDataPart(this.state.loadedQty, 10);\n    }\n\n    PullDataPart = (start, quantity) =>\n    {\n        this.fetchStoriesPromise = makeCancelable(axios.get(`${BACKEND + LIST_STORY}/${start}/${quantity}`)\n            .then(res =>\n            {\n                let storyData = res.data.stories;\n                if (this.state.stories)\n                    storyData = [...this.state.stories, ...res.data.stories];\n                this.setState({\n                    stories: [...storyData],\n                    filteredStories: [...res.data.stories],\n                    loadedQty: storyData.length,\n                    hasMore: res.data.hasMore\n                });\n                this.fetchStoriesPromise = null;\n                //TODO: filter the stories\n                this.filterStories();\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            }));\n    }\n\n    /* render\n     * Display a list of stories based on property 'stories'\n    */\n    render()\n    {\n        const { genres } = this.props;\n        const { stories, hasMore, filteredStories } = this.state;\n\n        return (\n            <Container>\n                {\n                    this.props.userInfo ?\n                        <Message attached=\"top\">\n                            <Modal trigger={<center><Button primary>New Story</Button></center>} dimmer=\"blurring\" closeOnDimmerClick={false} closeIcon>\n                                <Modal.Header>New Story</Modal.Header>\n                                <Modal.Content>\n                                    <StoryForm genres={genres} onStorySubmit={this.onStoryCreateSubmit} actionText=\"Create\" />\n                                </Modal.Content>\n                            </Modal>\n                        </Message>\n                        :\n                        null\n                }\n                {\n                    !!genres ?\n                        <Message attached>\n                            <GenreList genres={genres} onChange={this.onGenreChange} />\n                        </Message>\n                        :\n                        null\n\n                }\n                {\n                    !!stories ?\n                        <Message attached=\"bottom\">\n                            <InfiniteScroll\n                                className=\"ui centered cards\"\n                                style={{ marginTop: \"20px\" }}\n                                dataLength={stories.length}\n                                next={this.fetchData}\n                                hasMore={hasMore}\n                                hasChildren={true}>\n                                {\n                                    filteredStories.map((story, index) =>\n                                        (\n                                            <Book key={index} story={story} />\n                                        ))\n                                }\n                                {\n                                    hasMore ?\n                                        <Book loader />\n                                        :\n                                        null\n                                }\n                            </InfiniteScroll>\n                        </Message>\n                        :\n                        <Card.Group centered>\n                            <Book loader />\n                        </Card.Group>\n                }\n            </Container>\n        );\n    }\n}\n\nexport default compose(withRouter, withAuthStatic)(StoryList);","import React, { Component } from \"react\";\nimport { Form, Button, TextArea } from \"semantic-ui-react\";\n\nconst INITIAL_STATE = {\n    chapter: {\n        description: \"\",\n        title: \"\"\n    }\n}\n\nclass ChapterForm extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        if (this.props.chapter)\n            this.setState({ chapter: this.props.chapter });\n    }\n\n    onChange = event =>\n    {\n        let chapter = { ...this.state.chapter };\n        chapter.description = event.target.value;\n        this.setState({ chapter: chapter });\n    }\n\n    onSubmit = event =>\n    {\n        event.preventDefault();\n        this.props.onSubmit(this.state.chapter);\n    }\n\n    render()\n    {\n        const { chapter } = this.state;\n\n        return (\n            <Form onSubmit={this.onSubmit}>\n                <TextArea placeholder=\"Description...\" value={chapter.description} onChange={this.onChange} />\n                <Button type=\"submit\" primary>Create Chapter</Button>\n            </Form>\n        );\n    }\n}\n\nexport default ChapterForm;","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthStatic } from \"../firebase/Session\";\nimport { compose } from \"recompose\";\nimport axios from \"axios\";\nimport { Table, Loader, Header, Modal, Button, Icon, Card, Container } from \"semantic-ui-react\";\nimport { BACKEND, STORY_VIEW, UPDATE_STORY, LIST_CHARACTERS, CHAPTER_VIEW, CREATE_CHAPTER, UPDATE_CHAPTER, APPLY_CHARACTER, DENY_CHARACTER, ACCEPT_CHARACTER } from \"../../constants/routes\";\nimport { makeCancelable } from \"../../constants/extensions\";\nimport { CharacterGrid, CharacterCard } from \"../Character\";\nimport ChapterForm from \"./ChapterForm\";\nimport StoryForm from \"./StoryForm\";\n\nconst INITIAL_STATE = {\n    story: {\n        _id: \"\",\n        author: {},\n        chapters: [],\n        characters: [],\n        description: \"\",\n        genres: [],\n        subscribers: [],\n        applicantcharacters: [],\n        title: \"\"\n    },\n    characterList: null,\n    loadedStory: false,\n    loadedCharacters: false\n}\n\n/* StoryView\n * Displays all info from a single story listing its chapters.\n*/\nclass StoryView extends Component\n{\n    promises = [];\n\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        this.promises.splice(this.promises.length - 1, 0, makeCancelable(axios.get(`${BACKEND}${STORY_VIEW.replace(\":story_id\", this.props.match.params.story_id)}`)\n            .then(res =>\n            {\n                this.setState({ story: res.data.story, loadedStory: true });\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            })));\n\n        if (!!this.props.userInfo)\n        {\n            this.promises.splice(this.promises.length - 1, 0, makeCancelable(axios.post(`${BACKEND}${LIST_CHARACTERS}`, { token: localStorage.getItem(\"token\") })\n                .then(res =>\n                {\n                    const chars = res.data.characters;\n                    if (chars.length === 0)\n                        this.setState({ characterList: null, loadedCharacters: true });\n                    else\n                        this.setState({ characterList: res.data.characters, loadedCharacters: true });\n                })\n                .catch(error =>\n                {\n                    console.log(error);\n                })));\n        }\n    }\n\n    componentWillUnmount()\n    {\n        this.promises.forEach(promise => { promise.cancel(); });\n    }\n\n    goToLink = to =>\n    {\n        this.props.history.push(to);\n    }\n\n    onCharacterApplyClick = character =>\n    {\n        axios.post(`${BACKEND}${APPLY_CHARACTER}`, { token: localStorage.token, character_id: character._id, story_id: this.props.match.params.story_id })\n            .then(res =>\n            {\n                switch (res.data.status)\n                {\n                    case \"applied\":\n                        console.log(res.data.message);\n                        this.addToApplicants(character);\n                        break;\n                    case \"added\":\n                        console.log(res.data.message);\n                        this.addToRosterFree(character);\n                        break;\n                    case \"error\":\n                        console.log(res.data.message);\n                        break;\n\n                    default:\n                        console.log(`Server responded with an unknown status \"${res.data.status}\"`);\n                        break;\n                }\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    onAccept = (event, character) =>\n    {\n        event.stopPropagation();\n\n        axios.post(`${BACKEND}${ACCEPT_CHARACTER}`, { token: localStorage.getItem(\"token\"), character_id: character._id, story_id: this.state.story._id })\n            .then(res =>\n            {\n                this.addToRoster(character);\n                this.removeFromApplicants(character);\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    onDeny = (event, character) =>\n    {\n        event.stopPropagation();\n\n        axios.post(`${BACKEND}${DENY_CHARACTER}`, { token: localStorage.getItem(\"token\"), character_id: character._id, story_id: this.state.story._id })\n            .then(res =>\n            {\n                this.removeFromApplicants(character);\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    addToApplicants = character =>\n    {\n        let story = { ...this.state.story };\n        let newApplicants = story.applicantcharacters ? story.applicantcharacters : [];\n        newApplicants.splice(newApplicants.length, 0, character);\n        story.applicantcharacters = newApplicants;\n        this.setState({ story: story });\n    }\n\n    addToRosterFree = character =>\n    {\n        let story = { ...this.state.story };\n        let newRoster = story.characters ? story.characters : [];\n        newRoster.splice(newRoster.length, 0, character);\n        story.characters = newRoster;\n        this.setState({ story: story });\n    }\n\n    addToRoster = character =>\n    {\n        let story = { ...this.state.story };\n        let newRoster = story.characters ? story.characters : [];\n\n        newRoster.splice(newRoster.length, 0, character);\n        story.characters = newRoster;\n        this.setState({ story: story });\n    }\n\n    removeFromApplicants = character =>\n    {\n        let story = { ...this.state.story };\n        let newApplicants = story.applicantcharacters;\n        let applicantIndex = -1;\n\n        for (let i = 0; i < newApplicants.length; i++)\n        {\n            if (newApplicants[i]._id === character._id)\n            {\n                applicantIndex = i;\n                break;\n            }\n        }\n\n        newApplicants.splice(applicantIndex, 1);\n        story.applicantcharacters = newApplicants;\n        this.setState({ story: story });\n    }\n\n    submitChapter = chapter =>\n    {\n        axios.post(`${BACKEND}${CREATE_CHAPTER}`, { token: localStorage.getItem(\"token\"), chapter: chapter, story: this.state.story })\n            .then(res =>\n            {\n                const place = this.props.history.location.pathname;\n                this.props.history.push(\"/\");\n                this.props.history.push(place);\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    updateChapter = chapter =>\n    {\n        axios.post(`${BACKEND}${UPDATE_CHAPTER}`, { token: localStorage.getItem(\"token\"), chapter: chapter, story: this.state.story })\n            .then(res =>\n            {\n                const place = this.props.history.location.pathname;\n                this.props.history.push(\"/\");\n                this.props.history.push(place);\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            });\n    }\n\n    onChapterClick = (id, index) =>\n    {\n        this.goToLink(CHAPTER_VIEW.replace(\":story_id\", id).replace(\":chapter_name\", index));\n    }\n\n    onUpdateStory = story =>\n    {\n        const updateStory = {\n            _id: story._id,\n            title: story.title,\n            description: story.description,\n            genres: story.genres,\n            closed_group: story.closed_group,\n            color: story.color\n        };\n\n        axios.post(`${BACKEND}${UPDATE_STORY}`, {\n            token: localStorage.getItem(\"token\"),\n            story: updateStory\n        }).then(res =>\n        {\n            const place = this.props.history.location.pathname;\n            this.props.history.push(\"/\");\n            this.props.history.push(place);\n        }).catch(error =>\n        {\n            this.setState({ error: error });\n        });\n    }\n\n    render()\n    {\n        const { story, characterList, loadedStory, loadedCharacters } = this.state;\n        const { userInfo } = this.props;\n        const isCreator = (!!userInfo && userInfo.user.username === story.author.username);\n\n        return (\n            <div>\n                {\n                    loadedStory ?\n                        <div>\n                            <Table inverted attached=\"top\">\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.HeaderCell>\n                                            <center><Header as=\"h1\" inverted>{story.title}</Header></center>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.HeaderCell>\n                                            <center><Header as=\"h4\" inverted>by {story.author.username}</Header></center>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table attached fixed>\n                                <Table.Body>\n                                    <Table.Row textAlign=\"center\">\n                                        {\n                                            story.genres.map((genre, index) =>\n                                                (\n                                                    <Table.Cell key={index}>{genre.name}</Table.Cell>\n                                                ))\n                                        }\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                            <Table attached><Table.Body>\n                                <Table.Row>\n                                    <Table.Cell><center>{story.description}</center></Table.Cell>\n                                </Table.Row>\n                            </Table.Body></Table>\n                            <Table attached><Table.Body>\n                                <Table.Row><Table.Cell>\n                                    {\n                                        isCreator ?\n                                            <span>\n                                                <Modal trigger={<Button primary>Edit Story</Button>} dimmer=\"blurring\" closeOnDimmerClick={false} closeIcon>\n                                                    <Modal.Header>Edit Story</Modal.Header>\n                                                    <Modal.Content>\n                                                        <StoryForm genres={this.props.genres} story={this.state.story} actionText=\"Update\" onStorySubmit={this.onUpdateStory} />\n                                                    </Modal.Content>\n                                                </Modal>\n                                                <Modal trigger={<Button primary><Icon name=\"bookmark\" />Add Chapter</Button>} dimmer=\"blurring\" closeOnDimmerClick={false} closeIcon>\n                                                    <Modal.Header>New Chapter</Modal.Header>\n                                                    <Modal.Content>\n                                                        <ChapterForm onSubmit={this.submitChapter} chapter={{ title: `Chapter ${story.chapters.length + 1}` }} actionText=\"Create Chapter\" />\n                                                    </Modal.Content>\n                                                </Modal>\n                                                {\n                                                    story.closed_group ?\n                                                        <Modal trigger={<Button primary><Icon name=\"address book\" />Applicants</Button>} dimmer=\"blurring\" closeOnDimmerClick={false} closeIcon>\n                                                            <Modal.Header>Applicants</Modal.Header>\n                                                            <Modal.Content>\n                                                                <Container className=\"character-grid\">\n                                                                    {\n                                                                        story.applicantcharacters.length > 0 ?\n                                                                            <Card.Group centered>\n                                                                                {\n                                                                                    story.applicantcharacters.map((character, index) =>\n                                                                                        (\n                                                                                            <CharacterCard key={index} character={character} actionButtons={\n                                                                                                <Button.Group>\n                                                                                                    <Button key={0} icon color=\"blue\" onClick={event => this.onAccept(event, character)}>\n                                                                                                        <Icon name=\"check\" />\n                                                                                                    </Button>\n                                                                                                    <Button key={1} icon color=\"red\" onClick={event => this.onDeny(event, character)}>\n                                                                                                        <Icon name=\"close\" />\n                                                                                                    </Button>\n                                                                                                </Button.Group>} />\n                                                                                        ))\n                                                                                }\n                                                                            </Card.Group>\n                                                                            :\n                                                                            <Card.Group centered>\n                                                                                <Card>\n                                                                                    <Card.Content>\n                                                                                        <Card.Header><center>No More Applicants</center></Card.Header>\n                                                                                    </Card.Content>\n                                                                                </Card>\n                                                                            </Card.Group>\n                                                                    }\n                                                                </Container>\n                                                            </Modal.Content>\n                                                        </Modal>\n                                                        :\n                                                        null\n                                                }\n                                            </span>\n                                            :\n                                            null\n                                    }\n                                    <Modal trigger={<Button secondary><Icon name=\"spy\" />Roster</Button>} dimmer=\"blurring\" closeOnDimmerClick={false} closeIcon>\n                                        <Modal.Header>Character Roster</Modal.Header>\n                                        <Modal.Content>\n                                            <Modal.Description>\n                                                {!!story.characters ?\n                                                    <CharacterGrid characters={story.characters} /> :\n                                                    <div>Loading...</div>}\n                                            </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                                    {\n                                        loadedCharacters && characterList ?\n                                            <Modal trigger={\n                                                <Button secondary>\n                                                    {\n                                                        story.closed_group ?\n                                                            <span><Icon name=\"lock\" />Apply</span>\n                                                            :\n                                                            <span><Icon name=\"lock open\" />Join</span>\n                                                    }\n                                                </Button>\n                                            } dimmer=\"blurring\" closeOnDimmerClick={false} closeIcon>\n                                                <Modal.Header>{story.closed_group ? \"Apply Character\" : \"Add Character to Roster\"}</Modal.Header>\n                                                <Modal.Content>\n                                                    <CharacterGrid characters={characterList} onClick={this.onCharacterApplyClick} />\n                                                </Modal.Content>\n                                            </Modal>\n                                            :\n                                            null\n                                    }\n                                </Table.Cell></Table.Row>\n                            </Table.Body></Table>\n                            <Table attached=\"bottom\" className=\"linkable\"><Table.Body>\n                                {\n                                    story.chapters.map((chapter, index) =>\n                                        (\n                                            <Table.Row key={index}>\n                                                <Table.Cell onClick={() => { this.onChapterClick(story._id, index) }}>{chapter.title}</Table.Cell>\n                                                <Table.Cell onClick={() => { this.onChapterClick(story._id, index) }}>{chapter.description}</Table.Cell>\n                                                {\n                                                    userInfo && userInfo.user._id === story.author._id ?\n                                                        <Table.Cell collapsing>\n                                                            <Modal trigger={<Button secondary onClick={event => event.stopPropagation()}>Edit</Button>} closeOnDimmerClick={false} closeIcon>\n                                                                <Modal.Header>Edit Chapter</Modal.Header>\n                                                                <Modal.Content>\n                                                                    <ChapterForm chapter={chapter} onSubmit={this.updateChapter} actionText=\"Update Chapter\" />\n                                                                </Modal.Content>\n                                                            </Modal>\n                                                        </Table.Cell>\n                                                        :\n                                                        null\n                                                }\n                                            </Table.Row>\n                                        ))\n                                }\n                            </Table.Body></Table>\n                        </div>\n                        :\n                        <Loader active />\n                }\n            </div>\n        );\n    }\n}\n\nexport default compose(withRouter, withAuthStatic)(StoryView);","import React, { Component } from \"react\";\nimport { Form, Button, TextArea, Table, Header, Image, Message, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { makeCancelable } from \"../../constants/extensions\";\nimport { BACKEND, LIST_CHARACTERS } from \"../../constants/routes\";\nimport { CharacterGrid } from \"../Character\";\n\nconst INITIAL_STATE = {\n    reply: {\n        author: null,\n        description: \"\"\n    },\n    characterList: [],\n    loadedCharacters: false\n}\n\nclass ReplyForm extends Component\n{\n    promises = [];\n\n    constructor(props)\n    {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        if (this.props.reply)\n            this.setState({ reply: this.props.reply });\n        this.promises.splice(this.promises.length - 1, 0, makeCancelable(axios.post(`${BACKEND}${LIST_CHARACTERS}`, { token: localStorage.getItem(\"token\") })\n            .then(res =>\n            {\n                const chars = res.data.characters;\n                const ids = this.props.story.characters.map((character, index) => character._id);\n\n                const filteredChars = chars.filter(({ _id }) => ids.includes(_id));\n\n                if (chars.length === 0)\n                    this.setState({ characterList: null, loadedCharacters: true });\n                else\n                    this.setState({ characterList: filteredChars, loadedCharacters: true });\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            })));\n    }\n\n    onChange = event =>\n    {\n        let reply = { ...this.state.reply };\n        reply.description = event.target.value;\n        this.setState({ reply: reply });\n    }\n\n    onSubmit = event =>\n    {\n        console.log(this.state.reply);\n        this.props.onSubmit(this.state.reply);\n    }\n\n    onCharacterApplyClick = character =>\n    {\n        let reply = { ...this.state.reply };\n        reply.author = character;\n        this.setState({ reply: reply });\n    }\n\n    render()\n    {\n        const { characterList, loadedCharacters, reply } = this.state;\n\n        return (\n            <Form onSubmit={this.onSubmit}>\n                {\n                    loadedCharacters && characterList ? [\n                        <CharacterGrid key={0} characters={characterList} onClick={this.onCharacterApplyClick} />,\n                        <TextArea key={1} placeholder=\"Description...\" value={this.state.reply.description} onChange={this.onChange} />,\n                        <Button key={2} type=\"submit\" primary>{this.props.actionText}</Button>,\n                        <Table key={3}>\n                            <Table.Body>\n                                <Table.Row>\n                                    {\n                                        !!reply.author ?\n                                            <Table.Cell>\n                                                <div className=\"characterPlacard\" style={{ width: \"150px\", float: \"left\", marginRight: \"15px\" }}>\n                                                    <center><Header>{reply.author.name}</Header></center>\n                                                    <Image floated='left' src={reply.author.appearance.image} style={{ width: \"150px\" }} />\n                                                </div>\n                                                <pre style={{ margin: \"0\" }}>{reply.description}</pre>\n                                            </Table.Cell>\n                                            :\n                                            <Table.Cell>\n                                                <div className=\"characterPlacard\" style={{ width: \"150px\", float: \"left\", marginRight: \"15px\" }}>\n                                                    <center><Header>Choose a Character</Header></center>\n                                                    <Image floated='left' src={null} style={{ width: \"150px\" }} />\n                                                </div>\n                                                <pre style={{ margin: \"0\" }}>{reply.description}</pre>\n                                            </Table.Cell>\n                                    }\n                                </Table.Row>\n                            </Table.Body>\n                        </Table>\n                    ]\n                        :\n                        <Segment>\n                            <Message>\n                                <Message.Header>\n                                    No characters to reply with!\n                            </Message.Header>\n                            </Message>\n                        </Segment>\n                }\n            </Form>\n        );\n    }\n}\n\nexport default ReplyForm;","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport axios from \"axios\";\nimport withAuthStatic from \"../firebase/Session/withAuthStatic\";\nimport { Table, Placeholder, Button, Header, Image, Modal } from \"semantic-ui-react\";\nimport { BACKEND, CHAPTER_VIEW, STORY_VIEW, CREATE_REPLY, UPDATE_REPLY } from \"../../constants/routes\";\nimport { makeCancelable } from \"../../constants/extensions\";\nimport ReplyForm from \"./ReplyForm\";\n\nconst INITIAL_STATE = {\n    chapter: null,\n    story: null\n}\n\nclass ChapterView extends Component\n{\n    promises = [];\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    componentDidMount()\n    {\n        const { story_id, chapter_name } = this.props.match.params;\n        this.promises.splice(this.promises.length, 0, makeCancelable(axios.get(`${BACKEND}${CHAPTER_VIEW.replace(\":story_id\", story_id).replace(\":chapter_name\", chapter_name)}`)\n            .then(res =>\n            {\n                this.setState({ chapter: res.data.chapter });\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            })));\n\n        this.promises.splice(this.promises.length, 0, makeCancelable(axios.get(`${BACKEND}${STORY_VIEW.replace(\":story_id\", story_id)}`)\n            .then(res =>\n            {\n                this.setState({ story: res.data.story });\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            })));\n    }\n\n    componentWillUnmount()\n    {\n        this.promises.forEach(promise => promise.cancel());\n    }\n\n    onSubmitPost = post =>\n    {\n        if (post.author && post.description)\n        {\n            axios.post(`${BACKEND}${CREATE_REPLY}`, { token: localStorage.getItem(\"token\"), post: post, story: this.state.story, chapter: this.state.chapter })\n                .then(res =>\n                {\n                    const place = this.props.history.location.pathname;\n                    this.props.history.push(\"/\");\n                    this.props.history.push(place);\n                })\n                .catch(error =>\n                {\n                    console.log(error);\n                });\n        }\n    }\n\n    onUpdatePost = post =>\n    {\n        if (post.author && post.description)\n        {\n            axios.post(`${BACKEND}${UPDATE_REPLY}`, { token: localStorage.getItem(\"token\"), post: post, story: this.state.story, chapter: this.state.chapter })\n                .then(res =>\n                {\n                    const place = this.props.history.location.pathname;\n                    this.props.history.push(\"/\");\n                    this.props.history.push(place);\n                })\n                .catch(error =>\n                {\n                    console.log(error);\n                });\n        }\n    }\n\n    render()\n    {\n        const { state, props } = this;\n        const { chapter, story } = state;\n        const { userInfo } = props;\n\n        return (\n            <div>\n                {!!chapter && !!story ?\n                    <Table className=\"basic-table\">\n                        <Table.Body>\n                            <Table.Row><Table.Cell>\n                                {!!userInfo ?\n                                    <Modal trigger={<Button primary>New Reply</Button>} closeOnDimmerClick={false} closeIcon>\n                                        <Modal.Header>New Reply</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <ReplyForm story={story} onSubmit={post => { this.onSubmitPost(post) }} actionText=\"Submit\" />\n                                        </Modal.Content>\n                                    </Modal>\n                                    :\n                                    null\n                                }\n                            </Table.Cell></Table.Row>\n                            {\n                                chapter.posts.map((post, index) =>\n                                {\n                                    const TableBody = (post) => (\n                                        <Table.Body>\n                                            {\n                                                userInfo && userInfo.username === post.author.user.username ?\n                                                    <Table.Row>\n                                                        <Table.Cell>\n                                                            <Modal trigger={<Button>Edit</Button>} closeOnDimmerClick={false} closeIcon>\n                                                                <Modal.Header>Edit Reply</Modal.Header>\n                                                                <Modal.Content scrolling>\n                                                                    <ReplyForm story={story} reply={post} onSubmit={this.onUpdatePost} actionText=\"Update\" />\n                                                                </Modal.Content>\n                                                            </Modal>\n                                                        </Table.Cell>\n                                                    </Table.Row>\n                                                    :\n                                                    null\n                                            }\n                                            <Table.Row>\n                                                <Table.Cell>\n                                                    <div className=\"characterPlacard\" style={{ width: \"150px\", float: \"left\", marginRight: \"15px\" }}>\n                                                        <center><Header>{post.author.name}</Header></center>\n                                                        <Image floated='left' src={post.author.appearance.image} style={{ width: \"150px\" }} />\n                                                    </div>\n                                                    <pre style={{ margin: \"0\" }}>{post.description}</pre>\n                                                </Table.Cell>\n                                            </Table.Row>\n                                        </Table.Body>\n                                    );\n\n                                    return (\n                                        <Table.Row key={index}><Table.Cell>\n                                            {(index === chapter.posts.length - 1) ?\n                                                <Table attached=\"bottom\">{TableBody(post)}</Table> :\n                                                <Table attached>{TableBody(post)}</Table>\n                                            }\n                                        </Table.Cell></Table.Row>\n                                    )\n                                })\n                            }\n\n                        </Table.Body>\n                    </Table>\n                    :\n                    <Placeholder fluid>\n                        <Placeholder.Header image>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder.Header>\n                        <Placeholder.Paragraph>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder.Paragraph>\n                    </Placeholder>\n                }\n            </div>\n        );\n    }\n}\n\nexport default compose(withRouter, withAuthStatic)(ChapterView);","import React, { Component } from \"react\"\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Loader } from \"semantic-ui-react\";\nimport { BACKEND, LIST_GENRE, LIST_STORY, LIST_STORY_PART, STORY_VIEW, CHAPTER_VIEW } from \"../../constants/routes\";\nimport StoryList from \"./StoryList\";\nimport StoryView from \"./StoryView\";\nimport ChapterView from \"./ChapterView\";\nimport { makeCancelable } from \"../../constants/extensions\";\n\nconst INITIAL_STATE = {\n    genres: null\n}\n\n/* StoryContainer\n * Container for all story pages\n*/\nclass StoryContainer extends Component\n{\n    promises = [];\n\n    constructor(props)\n    {\n        super(props)\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    /* componentDidMount\n     * Sends requests to backend and receives genre list.\n    */\n    componentDidMount()\n    {\n        this.promises.splice(this.promises.length - 1, 0, makeCancelable(axios.get(`${BACKEND}${LIST_GENRE}`)\n            .then(res =>\n            {\n                const genreChecks = {};\n                res.data.genres.forEach(element =>\n                {\n                    genreChecks[element.name] = false;\n                });\n                this.setState({\n                    genres: res.data.genres\n                });\n            })\n            .catch(error =>\n            {\n                console.log(error);\n            })));\n    }\n\n    /* render\n     * Displays Story List, Story, and Chapter depending on path\n    */\n    render()\n    {\n        const { genres } = this.state;\n\n        return (\n            <div>\n                {\n                    (genres) ?\n                        [\n                            <Route key={0} path={LIST_STORY} component={() => { return (<StoryList genres={genres} />); }} />,\n                            <Route key={1} path={STORY_VIEW} component={() => { return (<StoryView genres={genres} />); }} />,\n                            <Route key={2} path={CHAPTER_VIEW} component={() => { return (<ChapterView />); }} />\n                        ]\n                        :\n                        <Loader active />\n                }\n            </div>\n        );\n    }\n}\n\nexport default StoryContainer;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport * as ROUTES from \"../../constants/routes\";\nimport { withAuthentication } from \"../firebase/Session\";\nimport { compose } from \"recompose\";\nimport Navigation from \"../Navigation\";\nimport Landing from \"../Landing\";\nimport SignUp from \"../firebase/SignUp\";\nimport SignIn from \"../firebase/SignIn\";\nimport PasswordForget from \"../firebase/PasswordForget\";\nimport Home from \"../Home\";\nimport Account from \"../Account\";\nimport Admin from \"../Admin\";\nimport { Segment, Container } from \"semantic-ui-react\";\nimport { CreateStory, CreateChapter } from \"../Story\";\nimport { StoryContainer } from \"../Story2\";\nimport { ListCharacters, ViewCharacter, CreateCharacter } from \"../Character\";\n\nclass App extends React.Component\n{\n    render()\n    {\n        return (\n            <Router>\n                <Container>\n                    <Segment inverted attached=\"top\" style={{ padding: \"2px\" }}>\n                        <Navigation />\n                    </Segment>\n                    <Segment attached=\"bottom\">\n                        <Route exact path={ROUTES.LANDING} component={Landing} />\n                        <Route path={ROUTES.SIGN_UP} component={SignUp} />\n                        <Route path={ROUTES.SIGN_IN} component={SignIn} />\n                        <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForget} />\n                        <Route path={ROUTES.HOME} component={Home} />\n                        <Route path={ROUTES.ACCOUNT} component={Account} />\n                        <Route path={ROUTES.ADMIN} component={Admin} />\n\n                        <Route path={ROUTES.STORY_CONTAINER} component={StoryContainer} />\n\n                        <Route path={ROUTES.CREATE_STORY} component={CreateStory} />\n                        <Route path={ROUTES.CREATE_CHAPTER} component={CreateChapter} />\n\n                        <Route path={ROUTES.LIST_CHARACTERS} component={ListCharacters} />\n                        <Route path={ROUTES.VIEW_CHARACTER} component={ViewCharacter} />\n                        <Route path={ROUTES.CREATE_CHARACTER} component={CreateCharacter} />\n                    </Segment>\n                </Container>\n            </Router>\n        );\n    }\n}\n\nexport default compose(withAuthentication)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from \"./components/firebase/Firebase\";\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}